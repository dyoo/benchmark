((current-date 1300305151 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "racket") (time 147.194091796875) (output "50005000\n"))
((current-date 1300305184 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "browser:Chrome 8/Linux") (time 32705) (output "50005000\n"))
((current-date 1300305425 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "racket") (time 191.654052734375) (output "50005000\n"))
((current-date 1300305457 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "browser:Chrome 8/Linux") (time 32426) (output "50005000\n"))
((current-date 1300305458 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "racket") (time 77.27197265625) (output "50005000\n"))
((current-date 1300305492 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "browser:Chrome 8/Linux") (time 34022) (output "50005000\n"))
((current-date 1300305723 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "racket") (time 145.52001953125) (output "50005000\n"))
((current-date 1300306019 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "racket") (time 194.87890625) (output "50005000\n"))
((current-date 1300306052 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss) (platform "browser:Chrome 8/Linux") (time 32306) (output "50005000\n"))
((current-date 1300306052 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "racket") (time 76.94287109375) (output "50005000\n"))
((current-date 1300306085 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "browser:Chrome 8/Linux") (time 32696) (output "50005000\n"))
((current-date 1300306096 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program cpstack) (platform "racket") (time 6669.383056640625) (output "3\n"))
((current-date 1300306975 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program cpstack) (platform "browser:Chrome 8/Linux") (time 879333) (output "3\n"))
((current-date 1300306979 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program tak) (platform "racket") (time 1004.924072265625) (output "7\n"))
((current-date 1300307200 "Wednesday, March 16th, 2011") (host-name "ilab-machine") (program tak) (platform "browser:Chrome 8/Linux") (time 221178) (output "7\n"))
((current-date 1300323144 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "racket") (time 131.693115234375) (output "50005000\n"))
((current-date 1300323202 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "racket") (time 134.60498046875) (output "50005000\n"))
((current-date 1300323233 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 31189) (output "50005000\n"))
((current-date 1300323233 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 72.55810546875) (output "50005000\n"))
((current-date 1300323264 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 31151) (output "50005000\n"))
((current-date 1300323270 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program cpstack) (platform "racket") (time 4934.89306640625) (output "3\n"))
((current-date 1300323999 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 729485) (output "3\n"))
((current-date 1300324000 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program tak) (platform "racket") (time 884.655029296875) (output "7\n"))
((current-date 1300324199 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 198909) (output "7\n"))
((current-date 1300324200 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program conform) (platform "racket") (time 490.662109375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1300324279 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 79317) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1300324352 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "racket") (time 142.2412109375) (output "50005000\n"))
((current-date 1300324426 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "racket") (time 148.593994140625) (output "50005000\n"))
((current-date 1300324566 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "racket") (time 146.380859375) (output "50005000\n"))
((current-date 1300326481 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss) (platform "browser:Firefox 3.6/Linux") (time 1914333) (output "50005000\n"))
((current-date 1300326481 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 81.101806640625) (output "50005000\n"))
((current-date 1300327255 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program gauss-iter) (platform "browser:Firefox 3.6/Linux") (time 773953) (output "50005000\n"))
((current-date 1300327261 "Wednesday, March 16th, 2011") (host-name "thunderclap") (program cpstack) (platform "racket") (time 5521.385986328125) (output "3\n"))
((current-date 1300343559 "Thursday, March 17th, 2011") (host-name "thunderclap") (program cpstack) (platform "browser:Firefox 3.6/Linux") (time 16298101) (output "3\n"))
((current-date 1300343560 "Thursday, March 17th, 2011") (host-name "thunderclap") (program tak) (platform "racket") (time 1016.14697265625) (output "7\n"))
((current-date 1300348182 "Thursday, March 17th, 2011") (host-name "thunderclap") (program tak) (platform "browser:Firefox 3.6/Linux") (time 4622336) (output "7\n"))
((current-date 1300348184 "Thursday, March 17th, 2011") (host-name "thunderclap") (program conform) (platform "racket") (time 468.52392578125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1300349447 "Thursday, March 17th, 2011") (host-name "thunderclap") (program conform) (platform "browser:Firefox 3.6/Linux") (time 1263328) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1300391618 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "racket") (time 7.927978515625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300392114 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "racket") (time 6.951171875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300392642 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "racket") (time 7.468994140625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300392645 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "js-vm:Chrome 8/Linux") (time 97) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300392645 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "browser:Chrome 8/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1300392645 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program gauss) (platform "racket") (time 159.77197265625) (output "50005000\n"))
((current-date 1300393292 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program gauss) (platform "js-vm:Chrome 8/Linux") (time 646623) (output "50005000\n"))
((current-date 1300393325 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program gauss) (platform "browser:Chrome 8/Linux") (time 32731) (output "50005000\n"))
((current-date 1300393329 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "racket") (time 99.776123046875) (output "50005000\n"))
((current-date 1300394093 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "js-vm:Chrome 8/Linux") (time 762957) (output "50005000\n"))
((current-date 1300394127 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program gauss-iter) (platform "browser:Chrome 8/Linux") (time 33894) (output "50005000\n"))
((current-date 1300394141 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program cpstack) (platform "racket") (time 6996.8818359375) (output "3\n"))
((current-date 1300397623 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "js-vm:Chrome 8/Linux") (time 99) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300397666 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "racket") (time 7.471923828125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300397666 "Thursday, March 17th, 2011") (host-name "ilab-machine") (program test) (platform "racket") (time 101.411865234375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300498049 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 29) (minute 27) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 6.113037109375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300498056 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 36) (minute 27) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 92) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300498056 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 36) (minute 27) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1300498056 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 36) (minute 27) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 122.0478515625) (output "50005000\n"))
((current-date 1300498431 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 51) (minute 33) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 375051) (output "50005000\n"))
((current-date 1300498464 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 24) (minute 34) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 32089) (output "50005000\n"))
((current-date 1300498464 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 24) (minute 34) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 66.40185546875) (output "50005000\n"))
((current-date 1300498810 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 10) (minute 40) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 345548) (output "50005000\n"))
((current-date 1300498841 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 41) (minute 40) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 30588) (output "50005000\n"))
((current-date 1300498848 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 48) (minute 40) (hour 21) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 7033.710205078125) (output "3\n"))
((current-date 1300504457 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 17) (minute 14) (hour 23) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 5608894) (output "3\n"))
((current-date 1300505204 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 44) (minute 26) (hour 23) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 746815) (output "3\n"))
((current-date 1300505205 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 45) (minute 26) (hour 23) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 852.99609375) (output "7\n"))
((current-date 1300507045 "Friday, March 18th, 2011" (year 2011) (month 3) (day 18) (second 25) (minute 57) (hour 23) (week-day 5) (year-day 76) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "js-vm:Chrome 10/Linux") (time 1840450) (output "7\n"))
((current-date 1300507254 "Saturday, March 19th, 2011" (year 2011) (month 3) (day 19) (second 54) (minute 0) (hour 0) (week-day 6) (year-day 77) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 209078) (output "7\n"))
((current-date 1300507255 "Saturday, March 19th, 2011" (year 2011) (month 3) (day 19) (second 55) (minute 0) (hour 0) (week-day 6) (year-day 77) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 518.2958984375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1300923402 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 42) (minute 36) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "racket") (time 650.441162109375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1300923509 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 29) (minute 38) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "browser:Chrome 10/Linux") (time 86011) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1300923917 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 17) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "racket") (time 6.880126953125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300923918 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 18) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "racket") (time 233.671142578125) (output "50005000\n"))
((current-date 1300923918 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 18) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "racket") (time 78.948974609375) (output "50005000\n"))
((current-date 1300923926 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 26) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "racket") (time 7254.498046875) (output "3\n"))
((current-date 1300923927 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 27) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "racket") (time 995.369873046875) (output "7\n"))
((current-date 1300923928 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 28) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "racket") (time 629.14892578125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1300923957 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 57) (minute 45) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1300923990 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 30) (minute 46) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "browser:Chrome 10/Linux") (time 32934) (output "50005000\n"))
((current-date 1300924026 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 6) (minute 47) (hour 19) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 35849) (output "50005000\n"))
((current-date 1300924909 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 49) (minute 1) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "browser:Chrome 10/Linux") (time 883435) (output "3\n"))
((current-date 1300925144 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 44) (minute 5) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "browser:Chrome 10/Linux") (time 230911) (output "7\n"))
((current-date 1300925229 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 9) (minute 7) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "browser:Chrome 10/Linux") (time 84390) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1300925688 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 48) (minute 14) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "racket") (time 7.384033203125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300925688 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 48) (minute 14) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "simulator") (time 3.969970703125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300925690 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 50) (minute 14) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "js-vm:Chrome 8/Linux") (time 99) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1300925690 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 50) (minute 14) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "browser:Chrome 8/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1300925691 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 51) (minute 14) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "racket") (time 143.0400390625) (output "50005000\n"))
((current-date 1300925717 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 17) (minute 15) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "browser:Chrome 8/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1300925749 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 49) (minute 15) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "browser:Chrome 8/Linux") (time 31755) (output "50005000\n"))
((current-date 1300925780 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 20) (minute 16) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "browser:Chrome 8/Linux") (time 30842) (output "50005000\n"))
((current-date 1300926677 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 17) (minute 31) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "browser:Chrome 8/Linux") (time 897164) (output "3\n"))
((current-date 1300926879 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 39) (minute 34) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "browser:Chrome 8/Linux") (time 202173) (output "7\n"))
((current-date 1300926957 "Wednesday, March 23rd, 2011" (year 2011) (month 3) (day 23) (second 57) (minute 35) (hour 20) (week-day 3) (year-day 81) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "browser:Chrome 8/Linux") (time 77553) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301008516 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 16) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 9.23876953125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301008516 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 16) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 254.301025390625) (output "50005000\n"))
((current-date 1301008516 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 16) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 71.471923828125) (output "50005000\n"))
((current-date 1301008522 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 22) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5793.927978515625) (output "3\n"))
((current-date 1301008523 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 23) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 849.26708984375) (output "7\n"))
((current-date 1301008524 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 24) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 473.141845703125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301008537 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 37) (minute 15) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301008564 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 4) (minute 16) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 26781) (output "50005000\n"))
((current-date 1301008591 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 31) (minute 16) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 27527) (output "50005000\n"))
((current-date 1301009373 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 33) (minute 29) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 781519) (output "3\n"))
((current-date 1301009634 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 54) (minute 33) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 260889) (output "7\n"))
((current-date 1301009708 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 8) (minute 35) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 73769) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301009799 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 39) (minute 36) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 6.51708984375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301009800 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 40) (minute 36) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 97) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301009800 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 40) (minute 36) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301009800 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 40) (minute 36) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 123.48388671875) (output "50005000\n"))
((current-date 1301010205 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 25) (minute 43) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 403838) (output "50005000\n"))
((current-date 1301010234 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 54) (minute 43) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 29328) (output "50005000\n"))
((current-date 1301010234 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 54) (minute 43) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 65.780029296875) (output "50005000\n"))
((current-date 1301010661 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 1) (minute 51) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 426454) (output "50005000\n"))
((current-date 1301010690 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 30) (minute 51) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 28930) (output "50005000\n"))
((current-date 1301010696 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 36) (minute 51) (hour 19) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 6326.419921875) (output "3\n"))
((current-date 1301017004 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 44) (minute 36) (hour 21) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 6307370) (output "3\n"))
((current-date 1301017684 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 4) (minute 48) (hour 21) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 680361) (output "3\n"))
((current-date 1301017685 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 5) (minute 48) (hour 21) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 856.038818359375) (output "7\n"))
((current-date 1301019724 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 4) (minute 22) (hour 22) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "js-vm:Chrome 10/Linux") (time 2039174) (output "7\n"))
((current-date 1301019912 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 12) (minute 25) (hour 22) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 187279) (output "7\n"))
((current-date 1301019912 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 12) (minute 25) (hour 22) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 508.801025390625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301019987 "Thursday, March 24th, 2011" (year 2011) (month 3) (day 24) (second 27) (minute 26) (hour 22) (week-day 4) (year-day 82) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 73401) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301098406 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 26) (minute 13) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 7.534912109375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301098407 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 27) (minute 13) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 141) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301098407 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 27) (minute 13) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301098407 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 27) (minute 13) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 137.37890625) (output "50005000\n"))
((current-date 1301098673 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 53) (minute 17) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 113.513916015625) (output "50005000\n"))
((current-date 1301098798 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 58) (minute 19) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 107013) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301099105 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 5) (minute 25) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 32363) (output "50005000\n"))
((current-date 1301099139 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 39) (minute 25) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 33806) (output "50005000\n"))
((current-date 1301099166 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 6) (minute 26) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 80.117919921875) (output "50005000\n"))
((current-date 1301099166 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 6) (minute 26) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 200.526123046875) (output "50005000\n"))
((current-date 1301099369 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 29) (minute 29) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 545.176025390625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301099478 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 18) (minute 31) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 81296) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301099659 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 19) (minute 34) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 8.070068359375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301099660 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 20) (minute 34) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 117) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301099660 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 20) (minute 34) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1301099660 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 20) (minute 34) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 126.39794921875) (output "50005000\n"))
((current-date 1301100015 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 15) (minute 40) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 354538) (output "50005000\n"))
((current-date 1301100042 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 42) (minute 40) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 26572) (output "50005000\n"))
((current-date 1301100042 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 42) (minute 40) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 66.469970703125) (output "50005000\n"))
((current-date 1301100422 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 2) (minute 47) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 380450) (output "50005000\n"))
((current-date 1301100450 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 30) (minute 47) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 27972) (output "50005000\n"))
((current-date 1301100457 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 37) (minute 47) (hour 20) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 6530.943115234375) (output "3\n"))
((current-date 1301106621 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 21) (minute 30) (hour 22) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 6163495) (output "3\n"))
((current-date 1301107389 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 9) (minute 43) (hour 22) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 767741) (output "3\n"))
((current-date 1301107390 "Friday, March 25th, 2011" (year 2011) (month 3) (day 25) (second 10) (minute 43) (hour 22) (week-day 5) (year-day 83) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 887.670166015625) (output "7\n"))
((current-date 1301185505 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 5) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 7.977783203125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301185506 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 6) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 311.0419921875) (output "50005000\n"))
((current-date 1301185506 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 6) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 71.702880859375) (output "50005000\n"))
((current-date 1301185512 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 12) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5746.191162109375) (output "3\n"))
((current-date 1301185513 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 13) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 847.741943359375) (output "7\n"))
((current-date 1301185514 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 14) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 508.48388671875) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301185531 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 31) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301185556 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 56) (minute 25) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 24651) (output "50005000\n"))
((current-date 1301185580 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 20) (minute 26) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 24508) (output "50005000\n"))
((current-date 1301186223 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 3) (minute 37) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 642357) (output "3\n"))
((current-date 1301186402 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 2) (minute 40) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 179180) (output "7\n"))
((current-date 1301186464 "Saturday, March 26th, 2011" (year 2011) (month 3) (day 26) (second 4) (minute 41) (hour 20) (week-day 6) (year-day 84) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 61935) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301201751 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 51) (minute 55) (hour 0) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 3) (output "1.461501637330903e+48\n"))
((current-date 1301201770 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 10) (minute 56) (hour 0) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 18372) (output "50005000\n"))
((current-date 1301201789 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 29) (minute 56) (hour 0) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 19458) (output "50005000\n"))
((current-date 1301202335 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 35) (minute 5) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 545898) (output "3\n"))
((current-date 1301202460 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 40) (minute 7) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 124999) (output "7\n"))
((current-date 1301202511 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 31) (minute 8) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 50023) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301202711 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 51) (minute 11) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 8.391845703125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301202712 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 52) (minute 11) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 108) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301202712 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 52) (minute 11) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301202712 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 52) (minute 11) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 126.485107421875) (output "50005000\n"))
((current-date 1301203083 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 3) (minute 18) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 370594) (output "50005000\n"))
((current-date 1301203102 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 22) (minute 18) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 19693) (output "50005000\n"))
((current-date 1301203103 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 23) (minute 18) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 65.64208984375) (output "50005000\n"))
((current-date 1301203466 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 26) (minute 24) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 363864) (output "50005000\n"))
((current-date 1301203484 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 44) (minute 24) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 17519) (output "50005000\n"))
((current-date 1301203490 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 50) (minute 24) (hour 1) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 6189.297119140625) (output "3\n"))
((current-date 1301209622 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 2) (minute 7) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 6131733) (output "3\n"))
((current-date 1301210284 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 4) (minute 18) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 661429) (output "3\n"))
((current-date 1301210285 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 5) (minute 18) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 848.703125) (output "7\n"))
((current-date 1301212097 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 17) (minute 48) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "js-vm:Chrome 10/Linux") (time 1812368) (output "7\n"))
((current-date 1301212227 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 27) (minute 50) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 129493) (output "7\n"))
((current-date 1301212227 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 27) (minute 50) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 505.31201171875) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301212282 "Sunday, March 27th, 2011" (year 2011) (month 3) (day 27) (second 22) (minute 51) (hour 3) (week-day 0) (year-day 85) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 53140) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301366715 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 15) (minute 45) (hour 22) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1301366811 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 51) (minute 46) (hour 22) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 50891) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301369089 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 49) (minute 24) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 46073) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301369305 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 25) (minute 28) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 43726) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301369762 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 2) (minute 36) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301369805 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 45) (minute 36) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 12244) (output "50005000\n"))
((current-date 1301369870 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 50) (minute 37) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 44016) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301369965 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 25) (minute 39) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 47019) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301370019 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 19) (minute 40) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 41346) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301370079 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 19) (minute 41) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 43658) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301370103 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 43) (minute 41) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 506.7529296875) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301370114 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 54) (minute 41) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 501.68896484375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301370125 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 5) (minute 42) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 490.744140625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301370136 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 16) (minute 42) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 495.718994140625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301370259 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 19) (minute 44) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 5.115966796875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301370260 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 20) (minute 44) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 102) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301370260 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 20) (minute 44) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1301370261 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 21) (minute 44) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 126.117919921875) (output "50005000\n"))
((current-date 1301370642 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 42) (minute 50) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 381042) (output "50005000\n"))
((current-date 1301370654 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 54) (minute 50) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 12329) (output "50005000\n"))
((current-date 1301370654 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 54) (minute 50) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 72.303955078125) (output "50005000\n"))
((current-date 1301371047 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 27) (minute 57) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 392981) (output "50005000\n"))
((current-date 1301371058 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 38) (minute 57) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 10509) (output "50005000\n"))
((current-date 1301371064 "Monday, March 28th, 2011" (year 2011) (month 3) (day 28) (second 44) (minute 57) (hour 23) (week-day 1) (year-day 86) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 6036.881103515625) (output "3\n"))
((current-date 1301377203 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 3) (minute 40) (hour 1) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 6138654) (output "3\n"))
((current-date 1301377598 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 38) (minute 46) (hour 1) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 394762) (output "3\n"))
((current-date 1301377599 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 39) (minute 46) (hour 1) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 884.81298828125) (output "7\n"))
((current-date 1301379550 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 10) (minute 19) (hour 2) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "js-vm:Chrome 10/Linux") (time 1950890) (output "7\n"))
((current-date 1301379635 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 35) (minute 20) (hour 2) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 85543) (output "7\n"))
((current-date 1301379636 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 36) (minute 20) (hour 2) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 543.98291015625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301379684 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 24) (minute 21) (hour 2) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 47695) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301450962 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 22) (minute 9) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 47028) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301451058 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 58) (minute 10) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 13097) (output "50005000\n"))
((current-date 1301451086 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 26) (minute 11) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 12833) (output "50005000\n"))
((current-date 1301451571 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 31) (minute 19) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 5.115966796875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301451571 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 31) (minute 19) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 125.97998046875) (output "50005000\n"))
((current-date 1301451571 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 31) (minute 19) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 66.406982421875) (output "50005000\n"))
((current-date 1301451577 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 37) (minute 19) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5128.35009765625) (output "3\n"))
((current-date 1301451578 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 38) (minute 19) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 856.26611328125) (output "7\n"))
((current-date 1301451578 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 38) (minute 19) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 491.947998046875) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301451653 "Tuesday, March 29th, 2011" (year 2011) (month 3) (day 29) (second 53) (minute 20) (hour 22) (week-day 2) (year-day 87) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 10715) (output "50005000\n"))
((current-date 1301603237 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 17) (minute 27) (hour 16) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 100710) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301603358 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 18) (minute 29) (hour 16) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 1155.32421875) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301603855 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 35) (minute 37) (hour 16) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 1142.630126953125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301603884 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 4) (minute 38) (hour 16) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 1130.7900390625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301603904 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 24) (minute 38) (hour 16) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 1138.52880859375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301604061 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 1) (minute 41) (hour 16) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 113844) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301605349 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 29) (minute 2) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program gauss) (platform "racket") (time 170.06103515625) (output "50005000\n"))
((current-date 1301605349 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 29) (minute 2) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program gauss-iter) (platform "racket") (time 70.97607421875) (output "50005000\n"))
((current-date 1301605371 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 51) (minute 2) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program gauss) (platform "racket") (time 172.840087890625) (output "50005000\n"))
((current-date 1301605371 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 51) (minute 2) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program gauss-iter) (platform "racket") (time 69.14892578125) (output "50005000\n"))
((current-date 1301605446 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 6) (minute 4) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program gauss) (platform "browser:Chrome 11/Linux") (time 23829) (output "50005000\n"))
((current-date 1301605469 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 29) (minute 4) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program gauss-iter) (platform "browser:Chrome 11/Linux") (time 23025) (output "50005000\n"))
((current-date 1301605508 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 8) (minute 5) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Firefox 3.6/Linux") (time 1310472) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301608431 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 51) (minute 53) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program tak) (platform "browser:Chrome 11/Linux") (time 207055) (output "7\n"))
((current-date 1301608466 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 26) (minute 54) (hour 17) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "kfisler-ra1") (program tak) (platform "racket") (time 1003.431884765625) (output "7\n"))
((current-date 1301629536 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 36) (minute 45) (hour 23) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 5.278076171875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301629541 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 41) (minute 45) (hour 23) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Firefox 3.6/Linux") (time 100) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301629541 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 41) (minute 45) (hour 23) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Firefox 3.6/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1301629541 "Thursday, March 31st, 2011" (year 2011) (month 3) (day 31) (second 41) (minute 45) (hour 23) (week-day 4) (year-day 89) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 145.31201171875) (output "50005000\n"))
((current-date 1301635590 "Friday, April 1st, 2011" (year 2011) (month 4) (day 1) (second 30) (minute 26) (hour 1) (week-day 5) (year-day 90) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Firefox 3.6/Linux") (time 6047941) (output "50005000\n"))
((current-date 1301719633 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 13) (minute 47) (hour 0) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 72.6240234375) (output "50005000\n"))
((current-date 1301769300 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 0) (minute 35) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 4.7900390625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301769301 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 1) (minute 35) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 19) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1301769302 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 2) (minute 35) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1301769302 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 2) (minute 35) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 124.94287109375) (output "50005000\n"))
((current-date 1301769507 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 27) (minute 38) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 204566) (output "50005000\n"))
((current-date 1301769521 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 41) (minute 38) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 14356) (output "50005000\n"))
((current-date 1301769521 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 41) (minute 38) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 68.132080078125) (output "50005000\n"))
((current-date 1301769759 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 39) (minute 42) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 237452) (output "50005000\n"))
((current-date 1301769770 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 50) (minute 42) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 10995) (output "50005000\n"))
((current-date 1301769775 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 55) (minute 42) (hour 14) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5474.278076171875) (output "3\n"))
((current-date 1301773447 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 7) (minute 44) (hour 15) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 3671746) (output "3\n"))
((current-date 1301773848 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 48) (minute 50) (hour 15) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 400395) (output "3\n"))
((current-date 1301773849 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 49) (minute 50) (hour 15) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 870.420166015625) (output "7\n"))
((current-date 1301774882 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 2) (minute 8) (hour 16) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "js-vm:Chrome 10/Linux") (time 1033382) (output "7\n"))
((current-date 1301774971 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 31) (minute 9) (hour 16) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 88697) (output "7\n"))
((current-date 1301774972 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 32) (minute 9) (hour 16) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 501.093017578125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1301775155 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 35) (minute 12) (hour 16) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "js-vm:Chrome 10/Linux") (time 175991) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1301775203 "Saturday, April 2nd, 2011" (year 2011) (month 4) (day 2) (second 23) (minute 13) (hour 16) (week-day 6) (year-day 91) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 47853) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1302717208 "Wednesday, April 13th, 2011" (year 2011) (month 4) (day 13) (second 28) (minute 53) (hour 13) (week-day 3) (year-day 102) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1302720515 "Wednesday, April 13th, 2011" (year 2011) (month 4) (day 13) (second 35) (minute 48) (hour 14) (week-day 3) (year-day 102) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 48349) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1302720549 "Wednesday, April 13th, 2011" (year 2011) (month 4) (day 13) (second 9) (minute 49) (hour 14) (week-day 3) (year-day 102) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 881.19287109375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1302720849 "Wednesday, April 13th, 2011" (year 2011) (month 4) (day 13) (second 9) (minute 54) (hour 14) (week-day 3) (year-day 102) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "js-vm:Chrome 10/Linux") (time 128425) (output "58786\n"))
((current-date 1302721078 "Wednesday, April 13th, 2011" (year 2011) (month 4) (day 13) (second 58) (minute 57) (hour 14) (week-day 3) (year-day 102) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 1138.1748046875) (output "58786\n"))
((current-date 1302816068 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 8) (minute 21) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "browser:Chrome 10/Linux") (time 23147) (output "58786\n"))
((current-date 1302816083 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 23) (minute 21) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 617.319091796875) (output "58786\n"))
((current-date 1302816160 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 40) (minute 22) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 4.73486328125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1302816162 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 42) (minute 22) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "js-vm:Chrome 10/Linux") (time 14) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1302816162 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 42) (minute 22) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 10/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1302816162 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 42) (minute 22) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 191.318115234375) (output "50005000\n"))
((current-date 1302816388 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 28) (minute 26) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "js-vm:Chrome 10/Linux") (time 225611) (output "50005000\n"))
((current-date 1302816404 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 44) (minute 26) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 10/Linux") (time 15945) (output "50005000\n"))
((current-date 1302816404 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 44) (minute 26) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 66.225830078125) (output "50005000\n"))
((current-date 1302816629 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 29) (minute 30) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "js-vm:Chrome 10/Linux") (time 224870) (output "50005000\n"))
((current-date 1302816641 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 41) (minute 30) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 10/Linux") (time 11731) (output "50005000\n"))
((current-date 1302816646 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 46) (minute 30) (hour 17) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5206.8740234375) (output "3\n"))
((current-date 1302820434 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 54) (minute 33) (hour 18) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "js-vm:Chrome 10/Linux") (time 3787630) (output "3\n"))
((current-date 1302820842 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 42) (minute 40) (hour 18) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 10/Linux") (time 408130) (output "3\n"))
((current-date 1302820843 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 43) (minute 40) (hour 18) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 852.389892578125) (output "7\n"))
((current-date 1302822029 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 29) (minute 0) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "js-vm:Chrome 10/Linux") (time 1186214) (output "7\n"))
((current-date 1302822132 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 12) (minute 2) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 10/Linux") (time 102893) (output "7\n"))
((current-date 1302822134 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 14) (minute 2) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 501.34716796875) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1302822296 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 56) (minute 4) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "js-vm:Chrome 10/Linux") (time 155488) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1302822347 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 47) (minute 5) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 10/Linux") (time 51143) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1302822348 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 48) (minute 5) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 269.055908203125) (output "58786\n"))
((current-date 1302822475 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 55) (minute 7) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "js-vm:Chrome 10/Linux") (time 117249) (output "58786\n"))
((current-date 1302822500 "Thursday, April 14th, 2011" (year 2011) (month 4) (day 14) (second 20) (minute 8) (hour 19) (week-day 4) (year-day 103) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "browser:Chrome 10/Linux") (time 23439) (output "58786\n"))
((current-date 1304023940 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 20) (minute 52) (hour 16) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 285.56494140625) (output "58786\n"))
((current-date 1304023947 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 27) (minute 52) (hour 16) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 274.987060546875) (output "58786\n"))
((current-date 1304023986 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 6) (minute 53) (hour 16) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "browser:Chrome 11/Linux") (time 22662) (output "58786\n"))
((current-date 1304024033 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 53) (minute 53) (hour 16) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 11/Linux") (time 1) (output "1.461501637330903e+48\n"))
((current-date 1304024047 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 7) (minute 54) (hour 16) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 11/Linux") (time 13796) (output "50005000\n"))
((current-date 1304024058 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 18) (minute 54) (hour 16) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 11/Linux") (time 11645) (output "50005000\n"))
((current-date 1304024471 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 11) (minute 1) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 11/Linux") (time 412280) (output "3\n"))
((current-date 1304024567 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 47) (minute 2) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 11/Linux") (time 96376) (output "7\n"))
((current-date 1304024618 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 38) (minute 3) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 11/Linux") (time 50362) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1304024641 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 1) (minute 4) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "browser:Chrome 11/Linux") (time 22650) (output "58786\n"))
((current-date 1304024832 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 12) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 9.0048828125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1304024833 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 13) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 116.405029296875) (output "50005000\n"))
((current-date 1304024833 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 13) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 103.02197265625) (output "50005000\n"))
((current-date 1304024840 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 20) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 6382.613037109375) (output "3\n"))
((current-date 1304024841 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 21) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 686.94287109375) (output "7\n"))
((current-date 1304024841 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 21) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 271.6220703125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1304024842 "Thursday, April 28th, 2011" (year 2011) (month 4) (day 28) (second 22) (minute 7) (hour 17) (week-day 4) (year-day 117) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 216.598876953125) (output "58786\n"))
((current-date 1304489445 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 45) (minute 10) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 15.4990234375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1304489447 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 47) (minute 10) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "browser:Chrome 11/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1304489447 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 47) (minute 10) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 98.470947265625) (output "50005000\n"))
((current-date 1304489461 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 1) (minute 11) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "browser:Chrome 11/Linux") (time 13783) (output "50005000\n"))
((current-date 1304489461 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 1) (minute 11) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 75.48583984375) (output "50005000\n"))
((current-date 1304489472 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 12) (minute 11) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "browser:Chrome 11/Linux") (time 11299) (output "50005000\n"))
((current-date 1304489478 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 18) (minute 11) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5632.6259765625) (output "3\n"))
((current-date 1304489911 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 31) (minute 18) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "browser:Chrome 11/Linux") (time 432841) (output "3\n"))
((current-date 1304489912 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 32) (minute 18) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 640.775146484375) (output "7\n"))
((current-date 1304490029 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 29) (minute 20) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "browser:Chrome 11/Linux") (time 117491) (output "7\n"))
((current-date 1304490030 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 30) (minute 20) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 308.60986328125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1304490088 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 28) (minute 21) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "browser:Chrome 11/Linux") (time 57788) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1304490089 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 29) (minute 21) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 292.3740234375) (output "58786\n"))
((current-date 1304490114 "Wednesday, May 4th, 2011" (year 2011) (month 5) (day 4) (second 54) (minute 21) (hour 2) (week-day 3) (year-day 123) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "browser:Chrome 11/Linux") (time 24531) (output "58786\n"))
((current-date 1306869600 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 0) (minute 20) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "whalesong:Chrome 10/Linux") (time 2) (output "1.461501637330903e+48\n"))
((current-date 1306869621 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 21) (minute 20) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "whalesong:Chrome 10/Linux") (time 21026) (output "50005000\n"))
((current-date 1306869637 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 37) (minute 20) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "whalesong:Chrome 10/Linux") (time 15832) (output "50005000\n"))
((current-date 1306869983 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 23) (minute 26) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "whalesong:Chrome 10/Linux") (time 345710) (output "3\n"))
((current-date 1306870093 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 13) (minute 28) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "whalesong:Chrome 10/Linux") (time 109701) (output "7\n"))
((current-date 1306870143 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 3) (minute 29) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "whalesong:Chrome 10/Linux") (time 47988) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1306870174 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 34) (minute 29) (hour 15) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "whalesong:Chrome 10/Linux") (time 23338) (output "58786\n"))
((current-date 1306873279 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 19) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "racket") (time 24.322998046875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1306873280 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 20) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "racket") (time 193.87109375) (output "50005000\n"))
((current-date 1306873280 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 20) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "racket") (time 81.752197265625) (output "50005000\n"))
((current-date 1306873287 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 27) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "racket") (time 6894.196044921875) (output "3\n"))
((current-date 1306873289 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 29) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "racket") (time 985.047119140625) (output "7\n"))
((current-date 1306873290 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 30) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "racket") (time 409.44189453125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1306873291 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 31) (minute 21) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "racket") (time 312.076904296875) (output "58786\n"))
((current-date 1306873405 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 25) (minute 23) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "racket") (time 304.627197265625) (output "58786\n"))
((current-date 1306873409 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 29) (minute 23) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "racket") (time 302.09912109375) (output "58786\n"))
((current-date 1306873447 "Tuesday, May 31st, 2011" (year 2011) (month 5) (day 31) (second 7) (minute 24) (hour 16) (week-day 2) (year-day 150) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "whalesong:Chrome 10/Linux") (time 25123) (output "58786\n"))
((current-date 1308855684 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 24) (minute 1) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "racket-no-jit") (time 10.64306640625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1308855687 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 27) (minute 1) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "racket-no-jit") (time 2574.73095703125) (output "50005000\n"))
((current-date 1308855691 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 31) (minute 1) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "racket-no-jit") (time 2913.27685546875) (output "50005000\n"))
((current-date 1308855751 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 31) (minute 2) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "racket-no-jit") (time 59597.365966796875) (output "3\n"))
((current-date 1308855764 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 44) (minute 2) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "racket-no-jit") (time 13295.615966796875) (output "7\n"))
((current-date 1308855771 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 51) (minute 2) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "racket-no-jit") (time 4392.22314453125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1308855773 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 53) (minute 2) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "racket-no-jit") (time 2245.635986328125) (output "58786\n"))
((current-date 1308855784 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 4) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "racket") (time 11.111083984375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1308855785 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 5) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "racket") (time 220.677978515625) (output "50005000\n"))
((current-date 1308855785 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 5) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "racket") (time 80.09912109375) (output "50005000\n"))
((current-date 1308855793 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 13) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program cpstack) (platform "racket") (time 7286.6298828125) (output "3\n"))
((current-date 1308855794 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 14) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program tak) (platform "racket") (time 720.237060546875) (output "7\n"))
((current-date 1308855794 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 14) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program conform) (platform "racket") (time 348.162109375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1308855795 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 15) (minute 3) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program earley) (platform "racket") (time 297.046875) (output "58786\n"))
((current-date 1308855871 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 31) (minute 4) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "whalesong:Chrome 11/Linux") (time 4) (output "1.461501637330903e+48\n"))
((current-date 1308856294 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 34) (minute 11) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "whalesong:Chrome 11/Linux") (time 4) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1308856329 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 9) (minute 12) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "whalesong:Chrome 11/Linux") (time 34744) (output "50005000\n"))
((current-date 1308856362 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 42) (minute 12) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "whalesong:Chrome 11/Linux") (time 32635) (output "50005000\n"))
((current-date 1308856865 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 5) (minute 21) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program test) (platform "whalesong:Chrome 11/Linux") (time 6) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1308856904 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 44) (minute 21) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss) (platform "whalesong:Chrome 11/Linux") (time 38979) (output "50005000\n"))
((current-date 1308856936 "Thursday, June 23rd, 2011" (year 2011) (month 6) (day 23) (second 16) (minute 22) (hour 15) (week-day 4) (year-day 173) (dst? #t) (time-zone-offset -14400)) (host-name "ilab-machine") (program gauss-iter) (platform "whalesong:Chrome 11/Linux") (time 31968) (output "50005000\n"))
((current-date 1316574864 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 24) (minute 14) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "whalesong:Chrome 14/Linux") (time 8) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1316574894 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 54) (minute 14) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "whalesong:Chrome 14/Linux") (time 26825) (output "50005000\n"))
((current-date 1316574925 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 25) (minute 15) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "whalesong:Chrome 14/Linux") (time 29147) (output "50005000\n"))
((current-date 1316575387 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 7) (minute 23) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "whalesong:Chrome 14/Linux") (time 458655) (output "3\n"))
((current-date 1316575487 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 47) (minute 24) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "whalesong:Chrome 14/Linux") (time 96876) (output "7\n"))
((current-date 1316575514 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 14) (minute 25) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "whalesong:Chrome 14/Linux") (time 23674) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1316575537 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 37) (minute 25) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "whalesong:Chrome 14/Linux") (time 16999) (output "58786\n"))
((current-date 1316575641 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 21) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket") (time 15.241943359375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1316575642 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 22) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket") (time 108.43896484375) (output "50005000\n"))
((current-date 1316575642 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 22) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 77.94091796875) (output "50005000\n"))
((current-date 1316575648 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 28) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 6010.31396484375) (output "3\n"))
((current-date 1316575649 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 29) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket") (time 589.89306640625) (output "7\n"))
((current-date 1316575650 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 30) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket") (time 322.620849609375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1316575651 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 31) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket") (time 942.447021484375) (output "58786\n"))
((current-date 1316575658 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 38) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program test) (platform "racket-no-jit") (time 15.383056640625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1316575660 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 40) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss) (platform "racket-no-jit") (time 2020.14794921875) (output "50005000\n"))
((current-date 1316575663 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 43) (minute 27) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program gauss-iter) (platform "racket-no-jit") (time 2556.431884765625) (output "50005000\n"))
((current-date 1316575705 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 25) (minute 28) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program cpstack) (platform "racket-no-jit") (time 41455.934814453125) (output "3\n"))
((current-date 1316575716 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 36) (minute 28) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program tak) (platform "racket-no-jit") (time 10877.114990234375) (output "7\n"))
((current-date 1316575720 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 40) (minute 28) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program conform) (platform "racket-no-jit") (time 3741.219970703125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1316575722 "Tuesday, September 20th, 2011" (year 2011) (month 9) (day 20) (second 42) (minute 28) (hour 23) (week-day 2) (year-day 262) (dst? #t) (time-zone-offset -14400)) (host-name "thunderclap") (program earley) (platform "racket-no-jit") (time 1825.583984375) (output "58786\n"))
((current-date 1329427306 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 46) (minute 21) (hour 16) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "whalesong:Chrome 17/Linux") (time 8) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329427341 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 21) (minute 22) (hour 16) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "whalesong:Chrome 17/Linux") (time 33060) (output "50005000\n"))
((current-date 1329427374 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 54) (minute 22) (hour 16) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "whalesong:Chrome 17/Linux") (time 31618) (output "50005000\n"))
((current-date 1329430514 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 14) (minute 15) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket-no-jit") (time 11.451171875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329430517 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 17) (minute 15) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket-no-jit") (time 2378.9208984375) (output "50005000\n"))
((current-date 1329430519 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 19) (minute 15) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket-no-jit") (time 1979.234130859375) (output "50005000\n"))
((current-date 1329430561 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 1) (minute 16) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket-no-jit") (time 41999.56005859375) (output "3\n"))
((current-date 1329430573 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 13) (minute 16) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket-no-jit") (time 10712.4931640625) (output "7\n"))
((current-date 1329430575 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 15) (minute 16) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket-no-jit") (time 1870.541015625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329430577 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 17) (minute 16) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket-no-jit") (time 1523.4912109375) (output "58786\n"))
((current-date 1329430603 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 43) (minute 16) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "whalesong:Chrome 12/Linux") (time 8) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329430636 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 16) (minute 17) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "whalesong:Chrome 12/Linux") (time 31960) (output "50005000\n"))
((current-date 1329430668 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 48) (minute 17) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "whalesong:Chrome 12/Linux") (time 30564) (output "50005000\n"))
((current-date 1329430941 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 21) (minute 22) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "whalesong:Chrome 12/Linux") (time 270976) (output "3\n"))
((current-date 1329431018 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 38) (minute 23) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "whalesong:Chrome 12/Linux") (time 74060) (output "7\n"))
((current-date 1329431045 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 5) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "whalesong:Chrome 12/Linux") (time 24230) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1329431061 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 21) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "whalesong:Chrome 12/Linux") (time 14444) (output "58786\n"))
((current-date 1329431090 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 50) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket") (time 11.668212890625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329431090 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 50) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket") (time 131.593017578125) (output "50005000\n"))
((current-date 1329431091 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 51) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket") (time 83.575927734375) (output "50005000\n"))
((current-date 1329431096 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 56) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket") (time 5210.5390625) (output "3\n"))
((current-date 1329431097 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 57) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket") (time 587.078125) (output "7\n"))
((current-date 1329431097 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 57) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket") (time 322.427001953125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329431098 "Thursday, February 16th, 2012" (year 2012) (month 2) (day 16) (second 58) (minute 24) (hour 17) (week-day 4) (year-day 46) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket") (time 218.4091796875) (output "58786\n"))
((current-date 1329508914 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 54) (minute 1) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket") (time 11.699951171875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329508914 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 54) (minute 1) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket") (time 132.400146484375) (output "50005000\n"))
((current-date 1329508914 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 54) (minute 1) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket") (time 79.954833984375) (output "50005000\n"))
((current-date 1329508920 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 0) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket") (time 5277.447021484375) (output "3\n"))
((current-date 1329508920 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 0) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket") (time 632.363037109375) (output "7\n"))
((current-date 1329508921 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 1) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket") (time 314.85302734375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329508922 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 2) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket") (time 215.01806640625) (output "58786\n"))
((current-date 1329508929 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 9) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket") (time 11.406005859375) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329508929 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 9) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket") (time 124.85498046875) (output "50005000\n"))
((current-date 1329508930 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 10) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket") (time 82.927001953125) (output "50005000\n"))
((current-date 1329508935 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 15) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket") (time 5092.1630859375) (output "3\n"))
((current-date 1329508935 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 15) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket") (time 636.0400390625) (output "7\n"))
((current-date 1329508936 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 16) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket") (time 317.637939453125) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329508936 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 16) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket") (time 212.91015625) (output "58786\n"))
((current-date 1329508943 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 23) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket-no-jit") (time 11.2138671875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329508945 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 25) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket-no-jit") (time 2095.880859375) (output "50005000\n"))
((current-date 1329508947 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 27) (minute 2) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket-no-jit") (time 2020.94482421875) (output "50005000\n"))
((current-date 1329508989 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 9) (minute 3) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket-no-jit") (time 41922.326904296875) (output "3\n"))
((current-date 1329509000 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 20) (minute 3) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket-no-jit") (time 10189.423095703125) (output "7\n"))
((current-date 1329509003 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 23) (minute 3) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket-no-jit") (time 1934.232177734375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329509005 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 25) (minute 3) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket-no-jit") (time 1520.56298828125) (output "58786\n"))
((current-date 1329509021 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 41) (minute 3) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "whalesong:Chrome 12/Linux") (time 8) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329509035 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 55) (minute 3) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "whalesong:Chrome 12/Linux") (time 12466) (output "50005000\n"))
((current-date 1329509048 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 8) (minute 4) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "whalesong:Chrome 12/Linux") (time 11659) (output "50005000\n"))
((current-date 1329509331 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 51) (minute 8) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "whalesong:Chrome 12/Linux") (time 281417) (output "3\n"))
((current-date 1329509400 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 0) (minute 10) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "whalesong:Chrome 12/Linux") (time 67192) (output "7\n"))
((current-date 1329509424 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 24) (minute 10) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "whalesong:Chrome 12/Linux") (time 22387) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1329509439 "Friday, February 17th, 2012" (year 2012) (month 2) (day 17) (second 39) (minute 10) (hour 15) (week-day 5) (year-day 47) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "whalesong:Chrome 12/Linux") (time 12767) (output "58786\n"))
((current-date 1329694251 "Sunday, February 19th, 2012" (year 2012) (month 2) (day 19) (second 51) (minute 30) (hour 18) (week-day 0) (year-day 49) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "racket") (time 5666.68994140625) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329694302 "Sunday, February 19th, 2012" (year 2012) (month 2) (day 19) (second 42) (minute 31) (hour 18) (week-day 0) (year-day 49) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "racket-no-jit") (time 42495.56494140625) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329694744 "Sunday, February 19th, 2012" (year 2012) (month 2) (day 19) (second 4) (minute 39) (hour 18) (week-day 0) (year-day 49) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "whalesong:Chrome 17/Linux") (time 309845) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329765631 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 31) (minute 20) (hour 14) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "racket") (time 1611.81201171875) (output "120549\n"))
((current-date 1329765639 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 39) (minute 20) (hour 14) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "racket") (time 1669.653076171875) (output "120549\n"))
((current-date 1329765673 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 13) (minute 21) (hour 14) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "racket-no-jit") (time 25896.77685546875) (output "120549\n"))
((current-date 1329765856 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 16) (minute 24) (hour 14) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "whalesong:Chrome 17/Linux") (time 154976) (output "120549\n"))
((current-date 1329778659 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 39) (minute 57) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket-no-jit") (time 22.015869140625) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329778661 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 41) (minute 57) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket-no-jit") (time 2181.1591796875) (output "50005000\n"))
((current-date 1329778664 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 44) (minute 57) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket-no-jit") (time 2035.009033203125) (output "50005000\n"))
((current-date 1329778706 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 26) (minute 58) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket-no-jit") (time 41384.7099609375) (output "3\n"))
((current-date 1329778717 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 37) (minute 58) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket-no-jit") (time 10473.661865234375) (output "7\n"))
((current-date 1329778719 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 39) (minute 58) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket-no-jit") (time 1933.157958984375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329778721 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 41) (minute 58) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket-no-jit") (time 1505.7900390625) (output "58786\n"))
((current-date 1329778766 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 26) (minute 59) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "racket-no-jit") (time 42573.5087890625) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329778796 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 56) (minute 59) (hour 17) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program deriv) (platform "racket-no-jit") (time 28917.6650390625) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329778802 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 2) (minute 0) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program graphs) (platform "racket-no-jit") (time 3807.48779296875) (output "'(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1329778867 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 7) (minute 1) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program kanren) (platform "racket-no-jit") (time 63826.905029296875) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1329778894 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 34) (minute 1) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "racket-no-jit") (time 25822.8330078125) (output "120549\n"))
((current-date 1329778975 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 55) (minute 2) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice2) (platform "racket-no-jit") (time 79284.916015625) (output "120549\n"))
((current-date 1329779079 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 39) (minute 4) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program mazefun) (platform "racket-no-jit") (time 102585.72290039062) (output "'((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1329779102 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 2) (minute 5) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nboyer) (platform "racket-no-jit") (time 20035.055908203125) (output "16445406 rewrites\n16445406\n"))
((current-date 1329779109 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 9) (minute 5) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nestedloop) (platform "racket-no-jit") (time 6862.041015625) (output "'(1000000 1000000)\n"))
((current-date 1329779261 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 41) (minute 7) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nfa) (platform "racket-no-jit") (time 150867.90698242188) (output "'done\n"))
((current-date 1329779334 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 54) (minute 8) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nqueens) (platform "racket-no-jit") (time 71444.80004882812) (output "92\n"))
((current-date 1329779411 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 11) (minute 10) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nucleic2) (platform "racket-no-jit") (time 74392.59301757812) (output "'done\n"))
((current-date 1329779449 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 49) (minute 10) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program paraffins) (platform "racket-no-jit") (time 36251.821044921875) (output "24894\n"))
((current-date 1329779454 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 54) (minute 10) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program peval) (platform "racket-no-jit") (time 3415.56298828125) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1329779585 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 5) (minute 13) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program puzzle) (platform "racket-no-jit") (time 130852.88916015625) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1329779658 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 18) (minute 14) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program sboyer) (platform "racket-no-jit") (time 70634.77709960938) (output "51507739 rewrites\n51507739\n"))
((current-date 1329779660 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 20) (minute 14) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program scheme) (platform "racket-no-jit") (time 1103.182861328125) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
((current-date 1329782293 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 13) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket") (time 23.218017578125) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329782293 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 13) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket") (time 129.822998046875) (output "50005000\n"))
((current-date 1329782293 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 13) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket") (time 82.366943359375) (output "50005000\n"))
((current-date 1329782299 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 19) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket") (time 4805.0810546875) (output "3\n"))
((current-date 1329782300 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 20) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket") (time 584.7109375) (output "7\n"))
((current-date 1329782300 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 20) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket") (time 310.468994140625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329782301 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 21) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket") (time 257.692138671875) (output "58786\n"))
((current-date 1329782308 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 28) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "racket") (time 6196.887939453125) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329782312 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 32) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program deriv) (platform "racket") (time 3827.8330078125) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329782314 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 34) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program graphs) (platform "racket") (time 979.539794921875) (output "'(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1329782326 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 46) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program kanren) (platform "racket") (time 10179.493896484375) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1329782327 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 47) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "racket") (time 1602.2099609375) (output "120549\n"))
((current-date 1329782334 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 54) (minute 58) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice2) (platform "racket") (time 5326.553955078125) (output "120549\n"))
((current-date 1329782342 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 2) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program mazefun) (platform "racket") (time 7881.513916015625) (output "'((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1329782347 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 7) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nboyer) (platform "racket") (time 3346.616943359375) (output "16445406 rewrites\n16445406\n"))
((current-date 1329782347 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 7) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nestedloop) (platform "racket") (time 273.137939453125) (output "'(1000000 1000000)\n"))
((current-date 1329782356 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 16) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nfa) (platform "racket") (time 8551.546142578125) (output "'done\n"))
((current-date 1329782361 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 21) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nqueens) (platform "racket") (time 4373.884033203125) (output "92\n"))
((current-date 1329782370 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 30) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nucleic2) (platform "racket") (time 8694.8359375) (output "'done\n"))
((current-date 1329782375 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 35) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program paraffins) (platform "racket") (time 4927.589111328125) (output "24894\n"))
((current-date 1329782376 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 36) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program peval) (platform "racket") (time 252.841064453125) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1329782385 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 45) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program puzzle) (platform "racket") (time 8934.239990234375) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1329782390 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 50) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program sboyer) (platform "racket") (time 4733.27001953125) (output "51507739 rewrites\n51507739\n"))
((current-date 1329782390 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 50) (minute 59) (hour 18) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program scheme) (platform "racket") (time 218.761962890625) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
((current-date 1329782409 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 9) (minute 0) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "whalesong:Chrome 12/Linux") (time 8) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329782420 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 20) (minute 0) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "whalesong:Chrome 12/Linux") (time 9930) (output "50005000\n"))
((current-date 1329782433 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 33) (minute 0) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "whalesong:Chrome 12/Linux") (time 11091) (output "50005000\n"))
((current-date 1329782717 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 17) (minute 5) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "whalesong:Chrome 12/Linux") (time 282492) (output "3\n"))
((current-date 1329782779 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 19) (minute 6) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "whalesong:Chrome 12/Linux") (time 57471) (output "7\n"))
((current-date 1329782808 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 48) (minute 6) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "whalesong:Chrome 12/Linux") (time 26225) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1329782822 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 2) (minute 7) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "whalesong:Chrome 12/Linux") (time 11528) (output "58786\n"))
((current-date 1329783110 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 50) (minute 11) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "whalesong:Chrome 12/Linux") (time 287406) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329783285 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 45) (minute 14) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program deriv) (platform "whalesong:Chrome 12/Linux") (time 172248) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329783320 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 20) (minute 15) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program graphs) (platform "whalesong:Chrome 12/Linux") (time 30349) (output "(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1329783753 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 33) (minute 22) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program kanren) (platform "whalesong:Chrome 12/Linux") (time 420615) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1329783896 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 56) (minute 24) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "whalesong:Chrome 12/Linux") (time 139723) (output "120549\n"))
((current-date 1329784330 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 10) (minute 32) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice2) (platform "whalesong:Chrome 12/Linux") (time 431451) (output "120549\n"))
((current-date 1329785204 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 44) (minute 46) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program mazefun) (platform "whalesong:Chrome 12/Linux") (time 871503) (output "((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1329785308 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 28) (minute 48) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nboyer) (platform "whalesong:Chrome 12/Linux") (time 97314) (output "16445406 rewrites\n16445406\n"))
((current-date 1329785358 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 18) (minute 49) (hour 19) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nestedloop) (platform "whalesong:Chrome 12/Linux") (time 46619) (output "(1000000 1000000)\n"))
((current-date 1329786256 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 16) (minute 4) (hour 20) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nfa) (platform "whalesong:Chrome 12/Linux") (time 896722) (output "done\n"))
((current-date 1329786655 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 55) (minute 10) (hour 20) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nqueens) (platform "whalesong:Chrome 12/Linux") (time 392910) (output "92\n"))
((current-date 1329788100 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 0) (minute 35) (hour 20) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nucleic2) (platform "whalesong:Chrome 12/Linux") (time 1436557) (output "done\n"))
((current-date 1329788354 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 14) (minute 39) (hour 20) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program paraffins) (platform "whalesong:Chrome 12/Linux") (time 246635) (output "24894\n"))
((current-date 1329788390 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 50) (minute 39) (hour 20) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program peval) (platform "whalesong:Chrome 12/Linux") (time 32705) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1329790217 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 17) (minute 10) (hour 21) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program puzzle) (platform "whalesong:Chrome 12/Linux") (time 1825337) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1329790570 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 10) (minute 16) (hour 21) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program sboyer) (platform "whalesong:Chrome 12/Linux") (time 346434) (output "51507739 rewrites\n51507739\n"))
((current-date 1329790596 "Monday, February 20th, 2012" (year 2012) (month 2) (day 20) (second 36) (minute 16) (hour 21) (week-day 1) (year-day 50) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program scheme) (platform "whalesong:Chrome 12/Linux") (time 22727) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
((current-date 1329876111 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 51) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "racket") (time 41.569091796875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329876111 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 51) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "racket") (time 135.808837890625) (output "50005000\n"))
((current-date 1329876112 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 52) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "racket") (time 357.208984375) (output "50005000\n"))
((current-date 1329876117 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 57) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "racket") (time 4732.449951171875) (output "3\n"))
((current-date 1329876118 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 58) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "racket") (time 802.721923828125) (output "7\n"))
((current-date 1329876119 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 59) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "racket") (time 303.5869140625) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1329876119 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 59) (minute 1) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "racket") (time 255.66796875) (output "58786\n"))
((current-date 1329876125 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 5) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "racket") (time 5602.880859375) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329876130 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 10) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program deriv) (platform "racket") (time 4433.807861328125) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329876131 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 11) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program graphs) (platform "racket") (time 988.10107421875) (output "'(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1329876143 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 23) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program kanren) (platform "racket") (time 9811.39697265625) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1329876144 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 24) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "racket") (time 1600.77490234375) (output "120549\n"))
((current-date 1329876150 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 30) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice2) (platform "racket") (time 5349.410888671875) (output "120549\n"))
((current-date 1329876158 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 38) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program mazefun) (platform "racket") (time 8019.98193359375) (output "'((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1329876162 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 42) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nboyer) (platform "racket") (time 3294.985107421875) (output "16445406 rewrites\n16445406\n"))
((current-date 1329876163 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 43) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nestedloop) (platform "racket") (time 262.590087890625) (output "'(1000000 1000000)\n"))
((current-date 1329876171 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 51) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nfa) (platform "racket") (time 8275.515869140625) (output "'done\n"))
((current-date 1329876177 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 57) (minute 2) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nqueens) (platform "racket") (time 4407.694091796875) (output "92\n"))
((current-date 1329876186 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 6) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nucleic2) (platform "racket") (time 8954.01708984375) (output "'done\n"))
((current-date 1329876191 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 11) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program paraffins) (platform "racket") (time 4906.5) (output "24894\n"))
((current-date 1329876192 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 12) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program peval) (platform "racket") (time 254.739990234375) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1329876200 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 20) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program puzzle) (platform "racket") (time 8059.338134765625) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1329876205 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 25) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program sboyer) (platform "racket") (time 5208.378173828125) (output "51507739 rewrites\n51507739\n"))
((current-date 1329876206 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 26) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program scheme) (platform "racket") (time 191.760009765625) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
((current-date 1329876215 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 35) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program test) (platform "whalesong:Chrome 17/Linux") (time 8) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1329876226 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 46) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss) (platform "whalesong:Chrome 17/Linux") (time 8661) (output "50005000\n"))
((current-date 1329876237 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 57) (minute 3) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program gauss-iter) (platform "whalesong:Chrome 17/Linux") (time 9051) (output "50005000\n"))
((current-date 1329876503 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 23) (minute 8) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program cpstack) (platform "whalesong:Chrome 17/Linux") (time 264280) (output "3\n"))
((current-date 1329876567 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 27) (minute 9) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program tak) (platform "whalesong:Chrome 17/Linux") (time 56047) (output "7\n"))
((current-date 1329876592 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 52) (minute 9) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program conform) (platform "whalesong:Chrome 17/Linux") (time 22251) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1329876605 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 5) (minute 10) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program earley) (platform "whalesong:Chrome 17/Linux") (time 10964) (output "58786\n"))
((current-date 1329876929 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 29) (minute 15) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program dderiv) (platform "whalesong:Chrome 17/Linux") (time 322471) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329877138 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 58) (minute 18) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program deriv) (platform "whalesong:Chrome 17/Linux") (time 206870) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1329877169 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 29) (minute 19) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program graphs) (platform "whalesong:Chrome 17/Linux") (time 25666) (output "(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1329877642 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 22) (minute 27) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program kanren) (platform "whalesong:Chrome 17/Linux") (time 459983) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1329877786 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 46) (minute 29) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice) (platform "whalesong:Chrome 17/Linux") (time 141657) (output "120549\n"))
((current-date 1329878220 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 0) (minute 37) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program lattice2) (platform "whalesong:Chrome 17/Linux") (time 431659) (output "120549\n"))
((current-date 1329879119 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 59) (minute 51) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program mazefun) (platform "whalesong:Chrome 17/Linux") (time 888069) (output "((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1329879214 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 34) (minute 53) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nboyer) (platform "whalesong:Chrome 17/Linux") (time 91652) (output "16445406 rewrites\n16445406\n"))
((current-date 1329879256 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 16) (minute 54) (hour 21) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nestedloop) (platform "whalesong:Chrome 17/Linux") (time 38698) (output "(1000000 1000000)\n"))
((current-date 1329880285 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 25) (minute 11) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nfa) (platform "whalesong:Chrome 17/Linux") (time 1027715) (output "done\n"))
((current-date 1329880650 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 30) (minute 17) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nqueens) (platform "whalesong:Chrome 17/Linux") (time 358784) (output "92\n"))
((current-date 1329881396 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 56) (minute 29) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program nucleic2) (platform "whalesong:Chrome 17/Linux") (time 735422) (output "done\n"))
((current-date 1329881622 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 42) (minute 33) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program paraffins) (platform "whalesong:Chrome 17/Linux") (time 223929) (output "24894\n"))
((current-date 1329881659 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 19) (minute 34) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program peval) (platform "whalesong:Chrome 17/Linux") (time 34068) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1329882333 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 33) (minute 45) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program puzzle) (platform "whalesong:Chrome 17/Linux") (time 672605) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1329882689 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 29) (minute 51) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program sboyer) (platform "whalesong:Chrome 17/Linux") (time 352023) (output "51507739 rewrites\n51507739\n"))
((current-date 1329882716 "Tuesday, February 21st, 2012" (year 2012) (month 2) (day 21) (second 56) (minute 51) (hour 22) (week-day 2) (year-day 51) (dst? #f) (time-zone-offset -18000)) (host-name "kui") (program scheme) (platform "whalesong:Chrome 17/Linux") (time 23386) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
((current-date 1330478446 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 46) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program test) (platform "racket") (time 12.108154296875) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1330478446 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 46) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program gauss) (platform "racket") (time 102.201171875) (output "50005000\n"))
((current-date 1330478446 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 46) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program gauss-iter) (platform "racket") (time 78.926025390625) (output "50005000\n"))
((current-date 1330478451 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 51) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program cpstack) (platform "racket") (time 5273.89794921875) (output "3\n"))
((current-date 1330478452 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 52) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program tak) (platform "racket") (time 637.56494140625) (output "7\n"))
((current-date 1330478453 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 53) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program conform) (platform "racket") (time 306.241943359375) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n'done\n"))
((current-date 1330478453 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 53) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program earley) (platform "racket") (time 194.77392578125) (output "58786\n"))
((current-date 1330478459 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 59) (minute 20) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program dderiv) (platform "racket") (time 5493.822021484375) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1330478462 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 2) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program deriv) (platform "racket") (time 3745.163818359375) (output "'(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1330478463 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 3) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program graphs) (platform "racket") (time 874.074951171875) (output "'(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1330478474 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 14) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program kanren) (platform "racket") (time 9278.369140625) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1330478476 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 16) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program lattice) (platform "racket") (time 2038.45703125) (output "120549\n"))
((current-date 1330478483 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 23) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program lattice2) (platform "racket") (time 6296.43505859375) (output "120549\n"))
((current-date 1330478490 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 30) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program mazefun) (platform "racket") (time 7782.095947265625) (output "'((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1330478493 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 33) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nboyer) (platform "racket") (time 2821.762939453125) (output "16445406 rewrites\n16445406\n"))
((current-date 1330478494 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 34) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nestedloop) (platform "racket") (time 243.283935546875) (output "'(1000000 1000000)\n"))
((current-date 1330478500 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 40) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nfa) (platform "racket") (time 6677.212890625) (output "'done\n"))
((current-date 1330478505 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 45) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nqueens) (platform "racket") (time 4597.830078125) (output "92\n"))
((current-date 1330478513 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 53) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nucleic2) (platform "racket") (time 7728.427978515625) (output "'done\n"))
((current-date 1330478518 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 58) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program paraffins) (platform "racket") (time 4390.385986328125) (output "24894\n"))
((current-date 1330478518 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 58) (minute 21) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program peval) (platform "racket") (time 245.927001953125) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1330478529 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 9) (minute 22) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program puzzle) (platform "racket") (time 10214.52001953125) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1330478534 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 14) (minute 22) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program sboyer) (platform "racket") (time 5030.1611328125) (output "51507739 rewrites\n51507739\n"))
((current-date 1330478534 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 14) (minute 22) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program scheme) (platform "racket") (time 201.846923828125) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
((current-date 1330478545 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 25) (minute 22) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program test) (platform "whalesong:Chrome 17/Linux") (time 10) (output "1461501637330902918203684832716283019655932542976\n"))
((current-date 1330478553 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 33) (minute 22) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program gauss) (platform "whalesong:Chrome 17/Linux") (time 7796) (output "50005000\n"))
((current-date 1330478563 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 43) (minute 22) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program gauss-iter) (platform "whalesong:Chrome 17/Linux") (time 8385) (output "50005000\n"))
((current-date 1330478878 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 58) (minute 27) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program cpstack) (platform "whalesong:Chrome 17/Linux") (time 313361) (output "3\n"))
((current-date 1330478934 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 54) (minute 28) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program tak) (platform "whalesong:Chrome 17/Linux") (time 54820) (output "7\n"))
((current-date 1330478962 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 22) (minute 29) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program conform) (platform "whalesong:Chrome 17/Linux") (time 26931) (output "6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n6 -> 26 -> 16\n16 -> 132 -> 30\n30 -> 374 -> 31\n31 -> 119\n ok.\n"))
((current-date 1330478978 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 38) (minute 29) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program earley) (platform "whalesong:Chrome 17/Linux") (time 14243) (output "58786\n"))
((current-date 1330479357 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 57) (minute 35) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program dderiv) (platform "whalesong:Chrome 17/Linux") (time 377600) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1330479582 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 42) (minute 39) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program deriv) (platform "whalesong:Chrome 17/Linux") (time 224150) (output "(+ (* (* 3 x x) (+ (/ 0 3) (/ 1 x) (/ 1 x))) (* (* a x x) (+ (/ 0 a) (/ 1 x) (/ 1 x))) (* (* b x) (+ (/ 0 b) (/ 1 x))) 0)\n"))
((current-date 1330479621 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 21) (minute 40) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program graphs) (platform "whalesong:Chrome 17/Linux") (time 37123) (output "(#((3 1) (3 2) (1 0) (2 0) (3)) #((3 1) (3 2) (1 0) (2 0) (3 2)) #((3 1) (3 2) (1 0) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (3)) #((2 1) (3 2) (3 1) (2 0) (2)) #((2 1) (3 2) (3 1) (2 0) (3 2)) #((2 1) (3 2) (3 1) (2 0) (1)) #((2 1) (3 2) (3 1) (2 0) (3 1)) #((2 1) (3 2) (3 1) (2 0) (2 1)) #((2 1) (3 2) (3 1) (2 0) (0)) #((2 1) (3 2) (3 1) (2 0) (3 0)) #((2 1) (3 2) (3 1) (2 0) (2 0)) #((2 1) (3 2) (3 1) (2 0) (1 0)) #((2 1) (3 2) (3 1) (0) (3)) #((2 1) (3 2) (3 1) (0) (2)) #((2 1) (3 2) (3 1) (0) (3 2)) #((2 1) (3 2) (3 1) (0) (2 1)) #((2 1) (3 2) (3 1) (0) (0)) #((2 1) (3 2) (3 1) (0) (3 0)) #((2 1) (3 2) (3 1) (0) (2 0)) #((2 1) (3 2) (3) (1 0) (3)) #((2 1) (3 2) (3) (1 0) (2)) #((2 1) (3 2) (3) (1 0) (3 2)) #((2 1) (3 2) (3) (1 0) (1)) #((2 1) (3 2) (3) (1 0) (3 1)) #((2 1) (3 2) (3) (1 0) (2 1)) #((2 1) (3 2) (3) (1 0) (0)) #((2 1) (3 2) (3) (1 0) (3 0)) #((2 1) (3 2) (3) (1 0) (2 0)) #((2 1) (3 2) (3) (1 0) (1 0)) #((2 1) (3 2) () (2 0) (3)) #((2 1) (3 2) () (2 0) (3 2)) #((2 1) (3 2) () (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (3)) #((2 1) (3 2) (3) (2 0) (2)) #((2 1) (3 2) (3) (2 0) (3 2)) #((2 1) (3 2) (3) (2 0) (1)) #((2 1) (3 2) (3) (2 0) (3 1)) #((2 1) (3 2) (3) (2 0) (2 1)) #((2 1) (3 2) (3) (2 0) (0)) #((2 1) (3 2) (3) (2 0) (3 0)) #((2 1) (3 2) (3) (2 0) (2 0)) #((2 1) (3 2) (3) (2 0) (1 0)) #((2 1) (3 2) (3) (0) (3)) #((2 1) (3 2) (3) (0) (2)) #((2 1) (3 2) (3) (0) (3 2)) #((2 1) (3 2) (3) (0) (1)) #((2 1) (3 2) (3) (0) (3 1)) #((2 1) (3 2) (3) (0) (2 1)) #((2 1) (3 2) (3) (0) (0)) #((2 1) (3 2) (3) (0) (3 0)) #((2 1) (3 2) (3) (0) (2 0)) #((2 1) (3 2) (3) (0) (1 0)) #((3 2) (3 2) (1 0) (1 0) (3)) #((3 2) (3 2) (1 0) (1 0) (3 2)) #((3 2) (3 2) (1 0) (1 0) (3 1)) #((2) () (3 1) (1 0) (3)) #((2) () (3 1) (1 0) (2)) #((2) () (3 1) (1 0) (3 2)) #((2) () (3 1) (1 0) (3 1)) #((2) () (3 1) (1 0) (2 1)) #((2) () (3 1) (1 0) (0)) #((2) () (3 1) (1 0) (3 0)) #((2) () (3 1) (1 0) (2 0)) #((2) () (3 1) (1 0) (1 0)) #((2) (3) (3 1) (1 0) (3)) #((2) (3) (3 1) (1 0) (2)) #((2) (3) (3 1) (1 0) (3 2)) #((2) (3) (3 1) (1 0) (1)) #((2) (3) (3 1) (1 0) (3 1)) #((2) (3) (3 1) (1 0) (2 1)) #((2) (3) (3 1) (1 0) (0)) #((2) (3) (3 1) (1 0) (3 0)) #((2) (3) (3 1) (1 0) (2 0)) #((2) (3) (3 1) (1 0) (1 0)) #((2) (3) (1) (1 0) (3)) #((2) (3) (1) (1 0) (2)) #((2) (3) (1) (1 0) (3 2)) #((2) (3) (1) (1 0) (1)) #((2) (3) (1) (1 0) (3 1)) #((2) (3) (1) (1 0) (2 1)) #((2) (3) (1) (1 0) (0)) #((2) (3) (1) (1 0) (3 0)) #((2) (3) (1) (1 0) (2 0)) #((2) (3) (1) (1 0) (1 0)) #((2) (3) (3 1) (2 0) (3)) #((2) (3) (3 1) (2 0) (3 2)) #((2) (3) (3 1) (2 0) (1)) #((2) (3) (3 1) (2 0) (3 1)) #((2) (3) (3 1) (2 0) (2 1)) #((2) (3) (3 1) (2 0) (1 0)) #((2) (3) (3 1) (0) (3)) #((2) (3) (3 1) (0) (2)) #((2) (3) (3 1) (0) (3 2)) #((2) (3) (3 1) (0) (1)) #((2) (3) (3 1) (0) (3 1)) #((2) (3) (3 1) (0) (2 1)) #((2) (3) (3 1) (0) (0)) #((2) (3) (3 1) (0) (3 0)) #((2) (3) (3 1) (0) (2 0)) #((2) (3) (3 1) (0) (1 0)) #((2) (3) (1) (0) (3)) #((2) (3) (1) (0) (3 2)) #((2) (3) (1) (0) (3 1)) #((3 2) () (3 1) (1 0) (3)) #((3 2) () (3 1) (1 0) (2)) #((3 2) () (3 1) (1 0) (3 2)) #((3 2) () (3 1) (1 0) (3 1)) #((3 2) () (3 1) (1 0) (2 1)) #((3 2) () (3 1) (1 0) (0)) #((3 2) () (3 1) (1 0) (3 0)) #((3 2) () (3 1) (1 0) (2 0)) #((3 2) () (3 1) (1 0) (1 0)) #((3 2) (3) (3 1) (1 0) (3)) #((3 2) (3) (3 1) (1 0) (2)) #((3 2) (3) (3 1) (1 0) (3 2)) #((3 2) (3) (3 1) (1 0) (1)) #((3 2) (3) (3 1) (1 0) (3 1)) #((3 2) (3) (3 1) (1 0) (2 1)) #((3 2) (3) (3 1) (1 0) (0)) #((3 2) (3) (3 1) (1 0) (3 0)) #((3 2) (3) (3 1) (1 0) (2 0)) #((3 2) (3) (3 1) (1 0) (1 0)) #((3 2) (3) (1) (1 0) (3)) #((3 2) (3) (1) (1 0) (2)) #((3 2) (3) (1) (1 0) (3 2)) #((3 2) (3) (1) (1 0) (1)) #((3 2) (3) (1) (1 0) (3 1)) #((3 2) (3) (1) (1 0) (2 1)) #((3 2) (3) (1) (1 0) (0)) #((3 2) (3) (1) (1 0) (3 0)) #((3 2) (3) (1) (1 0) (2 0)) #((3 2) (3) (1) (1 0) (1 0)) #((3 2) (3) (1) (2 0) (3)) #((3 2) (3) (1) (2 0) (2)) #((3 2) (3) (1) (2 0) (3 2)) #((3 2) (3) (1) (2 0) (1)) #((3 2) (3) (1) (2 0) (3 1)) #((3 2) (3) (1) (2 0) (2 1)) #((3 2) (3) (1) (2 0) (0)) #((3 2) (3) (1) (2 0) (3 0)) #((3 2) (3) (1) (2 0) (2 0)) #((3 2) (3) (1) (2 0) (1 0)) #((3 2) (3) (3 1) (2 0) (3)) #((3 2) (3) (3 1) (2 0) (2)) #((3 2) (3) (3 1) (2 0) (3 2)) #((3 2) (3) (3 1) (2 0) (1)) #((3 2) (3) (3 1) (2 0) (3 1)) #((3 2) (3) (3 1) (2 0) (2 1)) #((3 2) (3) (3 1) (2 0) (0)) #((3 2) (3) (3 1) (2 0) (3 0)) #((3 2) (3) (3 1) (2 0) (2 0)) #((3 2) (3) (3 1) (2 0) (1 0)) #((3 2) (3) (3 1) (0) (3)) #((3 2) (3) (3 1) (0) (2)) #((3 2) (3) (3 1) (0) (3 2)) #((3 2) (3) (3 1) (0) (1)) #((3 2) (3) (3 1) (0) (3 1)) #((3 2) (3) (3 1) (0) (2 1)) #((3 2) (3) (3 1) (0) (0)) #((3 2) (3) (3 1) (0) (3 0)) #((3 2) (3) (3 1) (0) (2 0)) #((3 2) (3) (3 1) (0) (1 0)) #((3 2) () (3 1) (2 1) (0)) #((3 2) () (3 1) (2 1) (3 0)) #((3 2) () (3 1) (2 1) (1 0)) #((3 2) () (3 1) (1) (0)) #((3 2) () (3 1) (1) (3 0)) #((3 2) () (3 1) (1) (2 0)) #((3 2) () (3 1) (1) (1 0)) #((3 2) (3) (1) (2 1) (0)) #((3 2) (3) (1) (2 1) (3 0)) #((3 2) (3) (1) (2 1) (2 0)) #((3 2) (3) (1) (2 1) (1 0)) #((3 2) (3) (3 1) (2 1) (0)) #((3 2) (3) (3 1) (2 1) (3 0)) #((3 2) (3) (3 1) (2 1) (2 0)) #((3 2) (3) (3 1) (2 1) (1 0)) #((3 2) (3) (3 1) (1) (0)) #((3 2) (3) (3 1) (1) (3 0)) #((3 2) (3) (3 1) (1) (2 0)) #((3 2) (3) (3 1) (1) (1 0)) #((3 2) (3) (1) (1) (0)) #((3 2) (3) (1) (1) (3 0)) #((3 2) (3) (1) (1) (2 0)) #((3 2) (3) (1) (1) (1 0)) #((2) (2) (3 1) (1 0) (3)) #((2) (2) (3 1) (1 0) (2)) #((2) (2) (3 1) (1 0) (3 2)) #((2) (2) (3 1) (1 0) (1)) #((2) (2) (3 1) (1 0) (3 1)) #((2) (2) (3 1) (1 0) (2 1)) #((2) (2) (3 1) (1 0) (0)) #((2) (2) (3 1) (1 0) (3 0)) #((2) (2) (3 1) (1 0) (2 0)) #((2) (2) (3 1) (1 0) (1 0)) #((2) (3 2) (3 1) (1 0) (3)) #((2) (3 2) (3 1) (1 0) (2)) #((2) (3 2) (3 1) (1 0) (3 2)) #((2) (3 2) (3 1) (1 0) (1)) #((2) (3 2) (3 1) (1 0) (3 1)) #((2) (3 2) (3 1) (1 0) (2 1)) #((2) (3 2) (3 1) (1 0) (0)) #((2) (3 2) (3 1) (1 0) (3 0)) #((2) (3 2) (3 1) (1 0) (2 0)) #((2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (2) (3 1) (1 0) (3)) #((3 2) (2) (3 1) (1 0) (2)) #((3 2) (2) (3 1) (1 0) (3 2)) #((3 2) (2) (3 1) (1 0) (1)) #((3 2) (2) (3 1) (1 0) (3 1)) #((3 2) (2) (3 1) (1 0) (2 1)) #((3 2) (2) (3 1) (1 0) (0)) #((3 2) (2) (3 1) (1 0) (3 0)) #((3 2) (2) (3 1) (1 0) (2 0)) #((3 2) (2) (3 1) (1 0) (1 0)) #((3 2) (2) (1) (1 0) (3)) #((3 2) (2) (1) (1 0) (3 2)) #((3 2) (2) (1) (1 0) (3 1)) #((3 2) (2) (1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (3)) #((3 2) (3 2) (3 1) (1 0) (2)) #((3 2) (3 2) (3 1) (1 0) (3 2)) #((3 2) (3 2) (3 1) (1 0) (1)) #((3 2) (3 2) (3 1) (1 0) (3 1)) #((3 2) (3 2) (3 1) (1 0) (2 1)) #((3 2) (3 2) (3 1) (1 0) (0)) #((3 2) (3 2) (3 1) (1 0) (3 0)) #((3 2) (3 2) (3 1) (1 0) (2 0)) #((3 2) (3 2) (3 1) (1 0) (1 0)) #((3 2) (3 2) (1) (1 0) (3)) #((3 2) (3 2) (1) (1 0) (2)) #((3 2) (3 2) (1) (1 0) (3 2)) #((3 2) (3 2) (1) (1 0) (1)) #((3 2) (3 2) (1) (1 0) (3 1)) #((3 2) (3 2) (1) (1 0) (2 1)) #((3 2) (3 2) (1) (1 0) (0)) #((3 2) (3 2) (1) (1 0) (3 0)) #((3 2) (3 2) (1) (1 0) (2 0)) #((3 2) (3 2) (1) (1 0) (1 0)) #((3 2) (3 2) (3 1) (2 0) (3)) #((3 2) (3 2) (3 1) (2 0) (3 2)) #((3 2) (3 2) (3 1) (2 0) (1)) #((3 2) (3 2) (3 1) (2 0) (3 1)) #((3 2) (3 2) (3 1) (2 0) (2 1)) #((3 2) (3 2) (3 1) (2 0) (1 0)) #((3 2) (3 2) (3 1) (0) (3)) #((3 2) (3 2) (3 1) (0) (2)) #((3 2) (3 2) (3 1) (0) (3 2)) #((3 2) (3 2) (3 1) (0) (1)) #((3 2) (3 2) (3 1) (0) (3 1)) #((3 2) (3 2) (3 1) (0) (2 1)) #((3 2) (3 2) (3 1) (0) (0)) #((3 2) (3 2) (3 1) (0) (3 0)) #((3 2) (3 2) (3 1) (0) (2 0)) #((3 2) (3 2) (3 1) (0) (1 0)) #((3 2) (3 2) (1) (0) (3)) #((3 2) (3 2) (1) (0) (3 2)) #((3 2) (3 2) (1) (0) (1)) #((3 2) (3 2) (1) (0) (3 1)) #((3 2) (3 2) (1) (0) (2 1)) #((3 2) (3 2) (1) (0) (1 0)) #((3 2) (3 2) (3 1) (2 1) (0)) #((3 2) (3 2) (3 1) (2 1) (3 0)) #((3 2) (3 2) (3 1) (2 1) (1 0)) #((3 2) (3 2) (3 1) (1) (0)) #((3 2) (3 2) (3 1) (1) (3 0)) #((3 2) (3 2) (3 1) (1) (2 0)) #((3 2) (3 2) (3 1) (1) (1 0)) #((3 2) (3 2) (1) (1) (0)) #((3 2) (3 2) (1) (1) (3 0)) #((3 2) (3 2) (1) (1) (1 0)) #((2) (2) (3) (1 0) (3)) #((2) (2) (3) (1 0) (2)) #((2) (2) (3) (1 0) (3 2)) #((2) (2) (3) (1 0) (1)) #((2) (2) (3) (1 0) (3 1)) #((2) (2) (3) (1 0) (2 1)) #((2) (2) (3) (1 0) (1 0)) #((2) (2) () (1 0) (3)) #((2) (2) () (1 0) (3 2)) #((2) (2) () (1 0) (3 1)) #((2) (3 2) (3) (1 0) (3)) #((2) (3 2) (3) (1 0) (2)) #((2) (3 2) (3) (1 0) (3 2)) #((2) (3 2) (3) (1 0) (1)) #((2) (3 2) (3) (1 0) (3 1)) #((2) (3 2) (3) (1 0) (2 1)) #((2) (3 2) (3) (1 0) (0)) #((2) (3 2) (3) (1 0) (3 0)) #((2) (3 2) (3) (1 0) (2 0)) #((2) (3 2) (3) (1 0) (1 0)) #((2) (3 2) () (1 0) (3)) #((2) (3 2) () (1 0) (3 2)) #((2) (3 2) () (1 0) (1)) #((2) (3 2) () (1 0) (3 1)) #((2) (3 2) () (1 0) (2 1)) #((2) (3 2) () (1 0) (3 0)) #((2) (3 2) () (1 0) (1 0)) #((3 2) (3 2) (3) (1 0) (3)) #((3 2) (3 2) (3) (1 0) (2)) #((3 2) (3 2) (3) (1 0) (3 2)) #((3 2) (3 2) (3) (1 0) (1)) #((3 2) (3 2) (3) (1 0) (3 1)) #((3 2) (3 2) (3) (1 0) (2 1)) #((3 2) (3 2) (3) (1 0) (1 0)) #((3 2) (3 2) () (1 0) (3)) #((3 2) (3 2) () (1 0) (3 2)) #((3 2) (3 2) () (1 0) (1)) #((3 2) (3 2) () (1 0) (3 1)) #((3 2) (3 2) () (1 0) (2 1)) #((3 2) (3 2) () (1 0) (1 0)) #((3 2) (2) () (2 1) (0)) #((3 2) (2) () (2 1) (3 0)) #((3 2) (2) () (2 1) (2 0)) #((3 2) (2) () (2 1) (1 0)) #((3 2) (2) (3) (2 1) (0)) #((3 2) (2) (3) (2 1) (3 0)) #((3 2) (2) (3) (2 1) (2 0)) #((3 2) (2) (3) (2 1) (1 0)) #((3 2) (2) (3) (1) (0)) #((3 2) (2) (3) (1) (3 0)) #((3 2) (2) (3) (1) (2 0)) #((3 2) (2) (3) (1) (1 0)) #((3 2) (2) () (1) (0)) #((3 2) (2) () (1) (3 0)) #((3 2) (2) () (1) (2 0)) #((3 2) (2) () (1) (1 0)) #((3 2) (3 2) () (2 1) (0)) #((3 2) (3 2) () (2 1) (3 0)) #((3 2) (3 2) () (2 1) (2 0)) #((3 2) (3 2) () (2 1) (1 0)) #((3 2) (3 2) (3) (2 1) (0)) #((3 2) (3 2) (3) (2 1) (3 0)) #((3 2) (3 2) (3) (2 1) (2 0)) #((3 2) (3 2) (3) (2 1) (1 0)) #((3 2) (3 2) (3) (1) (0)) #((3 2) (3 2) (3) (1) (3 0)) #((3 2) (3 2) (3) (1) (2 0)) #((3 2) (3 2) (3) (1) (1 0)) #((3 2) (3 2) () (1) (0)) #((3 2) (3 2) () (1) (3 0)) #((3 2) (3 2) () (1) (2 0)) #((3 2) (3 2) () (1) (1 0)) #((3 2) (3 2) (3) (2) (1 0)) #((3 2) (3 2) (3) () (1 0)) #((3 2) (3 2) () () (1 0)) #(() (3 2) (1) (2 0) (3)) #(() (3 2) (1) (2 0) (2)) #(() (3 2) (1) (2 0) (3 2)) #(() (3 2) (1) (2 0) (1)) #(() (3 2) (1) (2 0) (3 1)) #(() (3 2) (1) (2 0) (2 1)) #(() (3 2) (1) (2 0) (3 0)) #(() (3 2) (1) (2 0) (2 0)) #(() (3 2) (1) (2 0) (1 0)) #(() (3 2) (3 1) (2 0) (3)) #(() (3 2) (3 1) (2 0) (2)) #(() (3 2) (3 1) (2 0) (3 2)) #(() (3 2) (3 1) (2 0) (1)) #(() (3 2) (3 1) (2 0) (3 1)) #(() (3 2) (3 1) (2 0) (2 1)) #(() (3 2) (3 1) (2 0) (3 0)) #(() (3 2) (3 1) (2 0) (2 0)) #(() (3 2) (3 1) (2 0) (1 0)) #(() (3 2) (3 1) (0) (2)) #(() (3 2) (3 1) (0) (3 2)) #(() (3 2) (3 1) (0) (2 1)) #(() (3 2) (3 1) (0) (2 0)) #((3) (3 2) (1) (2 0) (3)) #((3) (3 2) (1) (2 0) (2)) #((3) (3 2) (1) (2 0) (3 2)) #((3) (3 2) (1) (2 0) (1)) #((3) (3 2) (1) (2 0) (3 1)) #((3) (3 2) (1) (2 0) (2 1)) #((3) (3 2) (1) (2 0) (0)) #((3) (3 2) (1) (2 0) (3 0)) #((3) (3 2) (1) (2 0) (2 0)) #((3) (3 2) (1) (2 0) (1 0)) #((3) (3 2) (3 1) (2 0) (3)) #((3) (3 2) (3 1) (2 0) (2)) #((3) (3 2) (3 1) (2 0) (3 2)) #((3) (3 2) (3 1) (2 0) (1)) #((3) (3 2) (3 1) (2 0) (3 1)) #((3) (3 2) (3 1) (2 0) (2 1)) #((3) (3 2) (3 1) (2 0) (0)) #((3) (3 2) (3 1) (2 0) (3 0)) #((3) (3 2) (3 1) (2 0) (2 0)) #((3) (3 2) (3 1) (2 0) (1 0)) #((3) (3 2) (3 1) (0) (2)) #((3) (3 2) (3 1) (0) (3 2)) #((3) (3 2) (3 1) (0) (2 1)) #((3) (3 2) (3 1) (0) (2 0)) #((3) (2) (3 1) (2 0) (3)) #((3) (2) (3 1) (2 0) (3 2)) #((3) (2) (3 1) (2 0) (1)) #((3) (2) (3 1) (2 0) (3 1)) #((3) (2) (3 1) (2 0) (2 1)) #((3) (2) (3 1) (2 0) (1 0)) #((3) (2) (3 1) (0) (2)) #((3) (2) (3 1) (0) (3 2)) #((3) (2) (3 1) (0) (1)) #((3) (2) (3 1) (0) (3 1)) #((3) (2) (3 1) (0) (2 1)) #((3) (2) (3 1) (0) (2 0)) #((3) (2) (3 1) (0) (1 0)) #((3) (2) (1) (0) (3 2)) #((3) (2) (1) (2 1) (0)) #((3) (2) (1) (2 1) (3 0)) #((3) (2) (1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (0)) #((3) (2) (3 1) (2 1) (3 0)) #((3) (2) (3 1) (2 1) (2 0)) #((3) (2) (3 1) (2 1) (1 0)) #((3) (3 2) (3 1) (2 1) (0)) #((3) (3 2) (3 1) (2 1) (3 0)) #((3) (3 2) (3 1) (2 1) (2 0)) #((3) (3 2) (1) (2) (0)) #((3) (3 2) (1) (2) (3 0)) #((3) (3 2) (1) (2) (2 0)) #((3) (3 2) (1) (2) (1 0)) #((3) (3 2) (3 1) (2) (0)) #((3) (3 2) (3 1) (2) (3 0)) #((3) (3 2) (3 1) (2) (2 0)) #((3) (3 2) (3 1) (2) (1 0)) #((3) (3 2) (3 1) () (2 0)) #(() (3 2) (3 1) (2 1) (3 0)) #(() (2) (3) (1 0) (3)) #(() (2) (3) (1 0) (2)) #(() (2) (3) (1 0) (3 2)) #(() (2) (3) (1 0) (1)) #(() (2) (3) (1 0) (3 1)) #(() (2) (3) (1 0) (2 1)) #(() (2) (3) (1 0) (3 0)) #(() (2) (3) (1 0) (2 0)) #(() (2) (3) (1 0) (1 0)) #(() (3 2) (3) (1 0) (3)) #(() (3 2) (3) (1 0) (2)) #(() (3 2) (3) (1 0) (3 2)) #(() (3 2) (3) (1 0) (1)) #(() (3 2) (3) (1 0) (3 1)) #(() (3 2) (3) (1 0) (2 1)) #(() (3 2) (3) (1 0) (3 0)) #(() (3 2) (3) (1 0) (2 0)) #(() (3 2) (3) (1 0) (1 0)) #(() (3 2) () (1 0) (3)) #(() (3 2) () (1 0) (3 2)) #(() (3 2) () (1 0) (3 1)) #(() (3 2) () (1 0) (2 1)) #(() (3 2) () (2 0) (1)) #(() (3 2) () (2 0) (3 1)) #(() (3 2) () (2 0) (2 1)) #(() (3 2) () (2 0) (1 0)) #(() (3 2) (3) (2 0) (1)) #(() (3 2) (3) (2 0) (3 1)) #(() (3 2) (3) (2 0) (2 1)) #(() (3 2) (3) (2 0) (1 0)) #(() (3 2) (3) (0) (1)) #(() (3 2) (3) (0) (3 1)) #(() (3 2) (3) (0) (2 1)) #(() (3 2) (3) (0) (1 0)) #(() (3 2) () (0) (1)) #(() (3 2) () (0) (3 1)) #(() (3 2) () (0) (2 1)) #(() (3 2) () (0) (1 0)) #((3) (2) (3) (1 0) (3)) #((3) (2) (3) (1 0) (2)) #((3) (2) (3) (1 0) (3 2)) #((3) (2) (3) (1 0) (1)) #((3) (2) (3) (1 0) (3 1)) #((3) (2) (3) (1 0) (2 1)) #((3) (2) (3) (1 0) (0)) #((3) (2) (3) (1 0) (3 0)) #((3) (2) (3) (1 0) (2 0)) #((3) (2) (3) (1 0) (1 0)) #((3) (2) () (1 0) (3)) #((3) (2) () (1 0) (3 2)) #((3) (2) () (1 0) (3 1)) #((3) (2) () (1 0) (0)) #((3) (2) () (1 0) (3 0)) #((3) (2) () (1 0) (2 0)) #((3) (2) () (1 0) (1 0)) #((3) (3 2) (3) (1 0) (3)) #((3) (3 2) (3) (1 0) (2)) #((3) (3 2) (3) (1 0) (3 2)) #((3) (3 2) (3) (1 0) (1)) #((3) (3 2) (3) (1 0) (3 1)) #((3) (3 2) (3) (1 0) (2 1)) #((3) (3 2) (3) (1 0) (0)) #((3) (3 2) (3) (1 0) (3 0)) #((3) (3 2) (3) (1 0) (2 0)) #((3) (3 2) (3) (1 0) (1 0)) #((3) (3 2) () (1 0) (3)) #((3) (3 2) () (1 0) (3 2)) #((3) (3 2) () (1 0) (1)) #((3) (3 2) () (1 0) (3 1)) #((3) (3 2) () (1 0) (2 1)) #((3) (3 2) () (1 0) (0)) #((3) (3 2) () (1 0) (3 0)) #((3) (3 2) () (1 0) (2 0)) #((3) (3 2) () (1 0) (1 0)) #((3) (3 2) () (2 0) (1)) #((3) (3 2) () (2 0) (3 1)) #((3) (3 2) () (2 0) (2 1)) #((3) (3 2) () (2 0) (1 0)) #((3) (3 2) (3) (2 0) (1)) #((3) (3 2) (3) (2 0) (3 1)) #((3) (3 2) (3) (2 0) (2 1)) #((3) (3 2) (3) (2 0) (1 0)) #((3) (3 2) (3) (0) (1)) #((3) (3 2) (3) (0) (3 1)) #((3) (3 2) (3) (0) (2 1)) #((3) (3 2) (3) (0) (1 0)) #((3) (3 2) () (0) (1)) #((3) (3 2) () (0) (3 1)) #((3) (3 2) () (0) (2 1)) #((3) (3 2) () (0) (1 0)) #((3) (2) () (2 0) (3 1)) #((3) (2) () (2 0) (1 0)) #((3) (2) (3) (2 0) (1)) #((3) (2) (3) (2 0) (3 1)) #((3) (2) (3) (2 0) (2 1)) #((3) (2) (3) (2 0) (1 0)) #((3) (2) (3) (0) (1)) #((3) (2) (3) (0) (3 1)) #((3) (2) (3) (0) (2 1)) #((3) (2) (3) (0) (1 0)) #((3) (2) () (0) (3 1)) #((3) (2) () (2 1) (0)) #((3) (2) () (2 1) (3 0)) #((3) (2) () (2 1) (2 0)) #((3) (2) () (2 1) (1 0)) #((3) (2) (3) (2 1) (0)) #((3) (2) (3) (2 1) (3 0)) #((3) (2) (3) (2 1) (2 0)) #((3) (2) (3) (2 1) (1 0)) #((3) (2) (3) (1) (0)) #((3) (2) (3) (1) (3 0)) #((3) (2) (3) (1) (2 0)) #((3) (2) (3) (1) (1 0)) #((3) (2) () (1) (0)) #((3) (2) () (1) (3 0)) #((3) (2) () (1) (2 0)) #((3) (2) () (1) (1 0)) #((3) (3 2) () (2 1) (0)) #((3) (3 2) () (2 1) (3 0)) #((3) (3 2) () (2 1) (2 0)) #((3) (3 2) () (2 1) (1 0)) #((3) (3 2) (3) (2 1) (0)) #((3) (3 2) (3) (2 1) (3 0)) #((3) (3 2) (3) (2 1) (2 0)) #((3) (3 2) (3) (2 1) (1 0)) #((3) (3 2) (3) (1) (0)) #((3) (3 2) (3) (1) (3 0)) #((3) (3 2) (3) (1) (2 0)) #((3) (3 2) (3) (1) (1 0)) #((3) (3 2) () (1) (0)) #((3) (3 2) () (1) (3 0)) #((3) (3 2) () (1) (2 0)) #((3) (3 2) () (1) (1 0)) #((3) (3 2) () (2) (1 0)) #((3) (3 2) (3) (2) (1 0)) #((3) (3 2) (3) () (1 0)) #((3) (3 2) () () (1 0)) #((3) (2) (3) (2) (1 0)) #((3) (2) (3) () (1 0)) #((3) (2) () () (1 0)) #(() (2) (3) (2 1) (3 0)) #(() (2) (3) (2 1) (2 0)) #(() (2) (3) (2 1) (1 0)) #(() (2) (3) (1) (3 0)) #(() (3 2) () (2 1) (3 0)) #(() (3 2) (3) (2 1) (3 0)) #(() (3 2) (3) (2 1) (2 0)) #(() (3 2) (3) (2 1) (1 0)) #(() (3 2) (3) (2) (1 0)) #(() (3 2) (3) () (1 0)) #((3) () () (2 1) (0)) #((3) () () (2 1) (3 0)) #((3) () () (2 1) (2 0)) #((3) () (3) (2 1) (0)) #((3) () (3) (2 1) (3 0)) #((3) () (3) (2 1) (2 0)) #((3) () (3) (2 1) (1 0)) #((3) (3) (3) (2 1) (0)) #((3) (3) (3) (2 1) (3 0)) #((3) (3) (3) (2 1) (2 0)) #((3) (3) () (2) (1 0)) #((3) (3) (3) (2) (1 0)) #(() () () (2 1) (3 0)) #(() () (3) (2 1) (3 0)) #(() () (3) (2 1) (2 0)) #(() (3) (3) (2 1) (3 0)) #(() (3) (3) (2 1) (2 0)) #(() (3) () (2) (1 0)) #(() (3) (3) (2) (1 0)))\n"))
((current-date 1330480240 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 40) (minute 50) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program kanren) (platform "whalesong:Chrome 17/Linux") (time 605531) (output "Testing eigen\neigens: (!x_!$gen$!x3 !y_!$gen$!x4)\nTesting test-unify/pairs-oleg1\nTesting test-unify/pairs-oleg2\nTesting test-unify/pairs-oleg3\nTesting test-unify/pairs-oleg4\nTesting test-unify/pairs-oleg5\nTesting test-unify/pairs-oleg6\nTesting test-unify/pairs-oleg7\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg8\nTesting test-unify/pairs-oleg10\nTesting test-unify/pairs-oleg11\nTesting test-pathological\n((y0.0 _.0) (y1.0 (f _.0 _.0)) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\n\n((y0.0 _.0) (y4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (y3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (y2.0 (f (f _.0 _.0) (f _.0 _.0))) (y1.0 (f _.0 _.0)) (x4.0 (f (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))) (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0))))) (x3.0 (f (f (f _.0 _.0) (f _.0 _.0)) (f (f _.0 _.0) (f _.0 _.0)))) (x2.0 (f (f _.0 _.0) (f _.0 _.0))) (x1.0 (f _.0 _.0)))\nTesting length-of-subst\nTesting test-father0\nTesting test-child-of-male-0\nTesting test-child-of-male-1\nTesting test-father-1\nTesting test-father-2\nTesting test-father-3\nTesting test-father-4\nTesting test-father-5\n((#(lv x) . sal))\n((#(lv x) . pat))\nTesting test-father-6/solve\nTesting test-father-7/solution\nTesting test-conscientious-parents\nTesting test-grandpa-sam-1\nTesting test-grandpa-sam-1\nTesting test-child-1\nTesting test-grandpa-1\nTesting test-grandpa-maker-2\nTesting test-grandpa-5\nTesting test-grandpa-55\nTesting test-grandpa-8\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10\nTesting test-grandpa-10-1\nTesting test-grandpa-10-soft-cut\nTesting test-no-grandma-grandpa-1\nTesting test-partially-eval-sgl\nTesting test-pred1\nTesting test-pred2\nTesting test-pred3\nTesting test-Seres-Spivey\nMove a disk from left to middle\nMove a disk from left to right\nMove a disk from middle to right\nMove a disk from left to middle\nMove a disk from right to left\nMove a disk from right to middle\nMove a disk from left to middle\ntest-towers-of-hanoi with 3 disks: ()\n\nTesting test-fun-resubst\nTesting test-towers-of-hanoi-path\nTesting unification-of-free-vars-1\nTesting unification-of-free-vars-2\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-3\nTesting unification-of-free-vars-4\nTesting test-concat-as-function\nTesting test-fun-concat\nTesting test-concat\n\nR1:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)))\n\nR2:\n(((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nR1+R2:\n(((x.0 x1) (y.0 y1)) ((x.0 x2) (y.0 y2)) ((x.0 x1) (y.0 y1)) ((x.0 x3) (y.0 y3)))\n\nRinf:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\n\nRinf+R1: Rinf starves R1:\n(((x.0 z) (y.0 z)) ((x.0 (s z)) (y.0 (s z))) ((x.0 (s (s z))) (y.0 (s (s z)))) ((x.0 (s (s (s z)))) (y.0 (s (s (s z))))) ((x.0 (s (s (s (s z))))) (y.0 (s (s (s (s z)))))))\nTesting Rinf+R1\nTesting R1+Rinf\nTesting R2+R1\nTesting R1+fact3\nTesting fact3+R1\nTesting all-interleave-1\nTesting R1 * Rinf: clearly starvation\nTesting R1 * Rinf: interleaving\n\nany-union\nTesting R1+R2\nTesting R2+R1\nTesting R1+R1\nTesting Rinf+R1\nTesting R1+RInf\nTesting Rinf2\nTesting Rinf+Rinf2\nTesting Rinf2+Rinf\n\nAppend with limited depth\n\nExtend: clause1 first: (((a.0 ()) (b.0 _.0) (c.0 _.0)) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0 _.1 _.2)) (b.0 _.3) (c.0 (_.0 _.1 _.2 . _.3))) ((a.0 (_.0 _.1 _.2 _.3)) (b.0 _.4) (c.0 (_.0 _.1 _.2 _.3 . _.4))))\n\nExtend: clause2 first. In Prolog, it would diverge!: (((a.0 (_.0 _.1)) (b.0 _.2) (c.0 (_.0 _.1 . _.2))) ((a.0 (_.0)) (b.0 _.1) (c.0 (_.0 . _.1))) ((a.0 ()) (b.0 _.0) (c.0 _.0)))\nTesting Addition\n\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables\nTesting variables-4a\nTesting variables-4b\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-1\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-!-1\nTesting arithmetic-primitives\nTesting test-!-sub1\nTesting test-!-+\nTesting test-!-2\nTesting test-!-3\nTesting if-expressions\nTesting variables-4a\nTesting variables-4c\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting everything-but-polymorphic-let\nTesting polymorphic-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting with-robust-syntax\nTesting with-robust-syntax-but-long-jumps/poly-let\npoly-let t-rand: (a--> bool bool)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\npoly-let t-rand: (a--> int int)\npoly-let rand: (lambda (x) (var x))\nTesting type-habitation-2\nTesting type-habitation-3\nTesting test-instantiated-1\nTesting test-instantiated-2\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" ((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)))\n(\"~%Counter-example: ~s~%\" (((a.0 _.0) (b.0 (_.0 _.1 (_.0 _.2 _.3))) (c1.0 _.1) (c2.0 _.2)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.0 _.4 _.5)))) (c1.0 _.1) (c2.0 _.4)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.0 _.6 _.7))))) (c1.0 _.1) (c2.0 _.6)) ((a.0 _.0) (b.0 (_.0 _.1 (_.2 _.3 (_.4 _.5 (_.6 _.7 (_.0 _.8 _.9)))))) (c1.0 _.1) (c2.0 _.8))))\n(\"~%Counter-example: ~s~%\" ())\nTesting Typechecking (closed world)\n(\"~%Typechecking (open world): ~s~%\" ())\nTesting Typechecking (open world) f [x] int\nTesting Zebra\nTesting First check the base case\nTesting Check the base case, using goal-fwd\nTesting Some preliminary checks\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x5)) (myeq !t1_!$gen$!x5 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x6)) (myeq !t1_!$gen$!x6 (mirror t1))))\nTesting Some preliminary checks, using goal-rev\nTesting Another check\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x7)) (myeq !t1_!$gen$!x7 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x8)) (myeq !t1_!$gen$!x8 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Another check, using goal-rev\n(\"btree ~s ~s ~n\" t1 t2)\nTesting Check the inductive case\n(\"Extending KB with ~s~%\" ((btree t2) (myeq t2 (mirror !t1_!$gen$!x9)) (myeq !t1_!$gen$!x9 (mirror t2))))\n(\"Extending KB with ~s~%\" ((btree t1) (myeq t1 (mirror !t1_!$gen$!x10)) (myeq !t1_!$gen$!x10 (mirror t1))))\n(\"btree ~s ~s ~n\" t1 t2)\n((t2.0 t2) (t1.0 t1) (a.0 !t1_!$gen$!x10) (b.0 !t1_!$gen$!x9) (t2.0 !t1_!$gen$!x10) (t1.0 !t1_!$gen$!x9) (t1.0 (root !t1_!$gen$!x9 !t1_!$gen$!x10)) (a.0 t2) (b.0 t1) (t2.0 t2) (t1.0 t1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))))) (((x.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1)))))))\nTesting Check the inductive case, using goal-rev, goal-fwd\n(\"btree ~s ~s ~n\" t1 t2)\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (a.0 (!sk_!$gen$!x1 t1)) (b.0 (!sk_!$gen$!x1 t2)) (t2.0 (!sk_!$gen$!x1 t1)) (t.0 t1) (t1.0 (!sk_!$gen$!x1 t2)) (t.0 t2) (t1.0 (root (!sk_!$gen$!x1 t2) (!sk_!$gen$!x1 t1))) (a.0 t2) (b.0 t1) (t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (t.0 (root t1 t2)))\nTesting First check the base case, using goal-fwd\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: (leaf x)\nsymmetry a: (leaf x)\nsymmetry b: (mirror (mirror (leaf x)))\nsymmetry a: (mirror (mirror (leaf x)))\nsymmetry b: _.0\nmirror a: (mirror (leaf x))\nmirror b: _.0\nmirror a: (mirror (leaf x))\nmirror b: (leaf x)\nsymmetry a: (mirror (leaf x))\nsymmetry b: (leaf x)\nTesting Some preliminary checks, using goal-rev\nTesting Another check, using goal-rev\nbtrii t1: t1\nbtrii t2: t2\n((t.0 t2) (t.0 t1) (t2.0 t2) (t1.0 t1) (*depth-counter*.0 1))\n(\"~%Check particulars of the inductive case, using goal-rev, goal-fwd ~s~%\" ((((x.0 (mirror (root t1 t2)))))))\n\naddition\n32\n26\n26\nTesting all numbers that sum to 4\nTesting print a few numbers such as X + 1 = Y\nTest recursive enumerability of addition\nTesting enumerability: 0+0=0\nTesting enumerability: 0+1=1\nTesting enumerability: 0+2=2\nTesting enumerability: 0+3=3\nTesting enumerability: 0+4=4\nTesting enumerability: 0+5=5\nTesting enumerability: 0+6=6\nTesting enumerability: 0+7=7\nTesting enumerability: 1+0=1\nTesting enumerability: 1+1=2\nTesting enumerability: 1+2=3\nTesting enumerability: 1+3=4\nTesting enumerability: 1+4=5\nTesting enumerability: 1+5=6\nTesting enumerability: 1+6=7\nTesting enumerability: 1+7=8\nTesting enumerability: 2+0=2\nTesting enumerability: 2+1=3\nTesting enumerability: 2+2=4\nTesting enumerability: 2+3=5\nTesting enumerability: 2+4=6\nTesting enumerability: 2+5=7\nTesting enumerability: 2+6=8\nTesting enumerability: 2+7=9\nTesting enumerability: 3+0=3\nTesting enumerability: 3+1=4\nTesting enumerability: 3+2=5\nTesting enumerability: 3+3=6\nTesting enumerability: 3+4=7\nTesting enumerability: 3+5=8\nTesting enumerability: 3+6=9\nTesting enumerability: 3+7=10\nTesting enumerability: 4+0=4\nTesting enumerability: 4+1=5\nTesting enumerability: 4+2=6\nTesting enumerability: 4+3=7\nTesting enumerability: 4+4=8\nTesting enumerability: 4+5=9\nTesting enumerability: 4+6=10\nTesting enumerability: 4+7=11\nTesting enumerability: 5+0=5\nTesting enumerability: 5+1=6\nTesting enumerability: 5+2=7\nTesting enumerability: 5+3=8\nTesting enumerability: 5+4=9\nTesting enumerability: 5+5=10\nTesting enumerability: 5+6=11\nTesting enumerability: 5+7=12\nTesting enumerability: 6+0=6\nTesting enumerability: 6+1=7\nTesting enumerability: 6+2=8\nTesting enumerability: 6+3=9\nTesting enumerability: 6+4=10\nTesting enumerability: 6+5=11\nTesting enumerability: 6+6=12\nTesting enumerability: 6+7=13\nTesting enumerability: 7+0=7\nTesting enumerability: 7+1=8\nTesting enumerability: 7+2=9\nTesting enumerability: 7+3=10\nTesting enumerability: 7+4=11\nTesting enumerability: 7+5=12\nTesting enumerability: 7+6=13\nTesting enumerability: 7+7=14\nTesting strong commutativity\n\nsubtraction\n26\n26\n29\n0\nTesting print a few numbers such as Y - Z = 4\nTesting print a few numbers such as X - Y = Z\n\ncomparisons\n0\n3\nTesting print all numbers that are less than 6\nTesting print *all* numbers that are greater than 4\n\nmultiplication\n6\n4\n4\n2\nTesting multiplication-fail-1\nTesting multiplication-all-1\nTesting multiplication-all-2\nTesting multiplication-all-3\nTesting multiplication-all-4\nTesting multiplication-all-5\nTesting multiplication-even-1\nTesting multiplication-even-2\nTesting multiplication-even-3\nTest recursive enumerability of multiplication\nTesting enumerability: 0*0=0\nTesting enumerability: 0*1=0\nTesting enumerability: 0*2=0\nTesting enumerability: 0*3=0\nTesting enumerability: 0*4=0\nTesting enumerability: 0*5=0\nTesting enumerability: 0*6=0\nTesting enumerability: 0*7=0\nTesting enumerability: 1*0=0\nTesting enumerability: 1*1=1\nTesting enumerability: 1*2=2\nTesting enumerability: 1*3=3\nTesting enumerability: 1*4=4\nTesting enumerability: 1*5=5\nTesting enumerability: 1*6=6\nTesting enumerability: 1*7=7\nTesting enumerability: 2*0=0\nTesting enumerability: 2*1=2\nTesting enumerability: 2*2=4\nTesting enumerability: 2*3=6\nTesting enumerability: 2*4=8\nTesting enumerability: 2*5=10\nTesting enumerability: 2*6=12\nTesting enumerability: 2*7=14\nTesting enumerability: 3*0=0\nTesting enumerability: 3*1=3\nTesting enumerability: 3*2=6\nTesting enumerability: 3*3=9\nTesting enumerability: 3*4=12\nTesting enumerability: 3*5=15\nTesting enumerability: 3*6=18\nTesting enumerability: 3*7=21\nTesting enumerability: 4*0=0\nTesting enumerability: 4*1=4\nTesting enumerability: 4*2=8\nTesting enumerability: 4*3=12\nTesting enumerability: 4*4=16\nTesting enumerability: 4*5=20\nTesting enumerability: 4*6=24\nTesting enumerability: 4*7=28\nTesting enumerability: 5*0=0\nTesting enumerability: 5*1=5\nTesting enumerability: 5*2=10\nTesting enumerability: 5*3=15\nTesting enumerability: 5*4=20\nTesting enumerability: 5*5=25\nTesting enumerability: 5*6=30\nTesting enumerability: 5*7=35\nTesting enumerability: 6*0=0\nTesting enumerability: 6*1=6\nTesting enumerability: 6*2=12\nTesting enumerability: 6*3=18\nTesting enumerability: 6*4=24\nTesting enumerability: 6*5=30\nTesting enumerability: 6*6=36\nTesting enumerability: 6*7=42\nTesting enumerability: 7*0=0\nTesting enumerability: 7*1=7\nTesting enumerability: 7*2=14\nTesting enumerability: 7*3=21\nTesting enumerability: 7*4=28\nTesting enumerability: 7*5=35\nTesting enumerability: 7*6=42\nTesting enumerability: 7*7=49\n\nsplit\nTesting split-1\nTesting split-2\nTesting split-3\nTesting split-4\nTesting split-5\nTesting split-6\n\ndivision, general\nTesting divo-1\nTesting div-fail-1\nTesting divo-2\nTesting divo-3\nTesting divo-4\nTesting divo-33-1\nTesting divo-33-2\nTesting divo-33-3\nTesting divo-33-5\nTesting divo-5-4\nTesting divo-5-5\n4\n19\n19\nTesting div-fail-2\nTesting all numbers such as 5/Z = 1\nTesting all inexact factorizations of 12\nTesting div-all-3\nTesting div-even\nTesting div-even-fail\nTesting div-odd\nTesting div-odd-fail\nTesting div-enum-sample\nTest recursive enumerability of division\nTesting exp2-1\nTesting exp2-2\nTesting exp2-3\nTesting exp2-4\nTesting logo-15-1\nTesting logo-15-3\nTesting logo-15-4\nTesting logo-15-5\nTesting logo-15-15\nTesting logo-15-16\nTesting logo-15--3\nTesting logo-15--3-1\nTesting logo-32--4\nTesting logo-33--5\nTesting logo-2-5\nTesting logo-3-2\nTesting logo-3-3\nTesting powers-of-3\nTesting powers-of-exp-3\n10\n"))
((current-date 1330480466 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 26) (minute 54) (hour 20) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program lattice) (platform "whalesong:Chrome 17/Linux") (time 223981) (output "120549\n"))
((current-date 1330480963 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 43) (minute 2) (hour 21) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program lattice2) (platform "whalesong:Chrome 17/Linux") (time 495402) (output "120549\n"))
((current-date 1330482089 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 29) (minute 21) (hour 21) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program mazefun) (platform "whalesong:Chrome 17/Linux") (time 1124443) (output "((_ * _ _ _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ _ _ * _ _ _ * _ _ _) (_ * _ * _ * _ * _ * _) (_ * _ _ _ * _ * _ * _) (* * _ * * * * * _ * _) (_ * _ _ _ _ _ _ _ * _) (_ * _ * _ * * * * * *) (_ _ _ * _ _ _ _ _ _ _) (_ * * * * * * * _ * *) (_ * _ _ _ _ _ _ _ _ _))\n"))
((current-date 1330482215 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 35) (minute 23) (hour 21) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nboyer) (platform "whalesong:Chrome 17/Linux") (time 124618) (output "16445406 rewrites\n16445406\n"))
((current-date 1330482255 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 15) (minute 24) (hour 21) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nestedloop) (platform "whalesong:Chrome 17/Linux") (time 38755) (output "(1000000 1000000)\n"))
((current-date 1330483479 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 39) (minute 44) (hour 21) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nfa) (platform "whalesong:Chrome 17/Linux") (time 1222659) (output "done\n"))
((current-date 1330483978 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 58) (minute 52) (hour 21) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nqueens) (platform "whalesong:Chrome 17/Linux") (time 497338) (output "92\n"))
((current-date 1330485077 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 17) (minute 11) (hour 22) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program nucleic2) (platform "whalesong:Chrome 17/Linux") (time 1093572) (output "done\n"))
((current-date 1330485375 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 15) (minute 16) (hour 22) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program paraffins) (platform "whalesong:Chrome 17/Linux") (time 297139) (output "24894\n"))
((current-date 1330485419 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 59) (minute 16) (hour 22) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program peval) (platform "whalesong:Chrome 17/Linux") (time 41753) (output "((lambda (b_2) (quote 11)) (lambda (x_4) (if (< x_4 (quote 0)) (- x_4) (- (quote 10) x_4))) (lambda (l_11) (letrec ((add-list_13_16 (lambda (l_14) (if (null? l_14) (quote ()) (cons (+ (quote 1) (car l_14)) (add-list_13_16 (cdr l_14))))))) (add-list_13_16 l_11))) (lambda (n_18) (list (+ (quote 1) n_18) (+ (quote 2) n_18) (+ (quote 3) n_18))) (lambda (env_27) (lookup (quote x) env_27)) (lambda (env_36) (apply (lookup (quote f) env_36) (list (quote 1) (quote 2) (quote 3)))) (lambda (b_53) (+ (quote 15) b_53 b_53 b_53 b_53 b_53 b_53)) (lambda () (quote 55)) (lambda () (list (quote a) (quote b) (quote c) (quote d) (quote e) (quote f) (quote g) (quote h) (quote i) (quote j) (quote k) (quote l) (quote m) (quote n) (quote o) (quote p) (quote q) (quote r) (quote s) (quote t) (quote u) (quote v) (quote w) (quote x) (quote y) (quote z))) (lambda () (list (quote z) (quote y) (quote x) (quote w) (quote v) (quote u) (quote t) (quote s) (quote r) (quote q) (quote p) (quote o) (quote n) (quote m) (quote l) (quote k) (quote j) (quote i) (quote h) (quote g) (quote f) (quote e) (quote d) (quote c) (quote b) (quote a))))\n"))
((current-date 1330486417 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 37) (minute 33) (hour 22) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program puzzle) (platform "whalesong:Chrome 17/Linux") (time 997410) (output "\nSuccess in 13 trials.\n\nSuccess in 26 trials.\n\nSuccess in 39 trials.\n\nSuccess in 52 trials.\n\nSuccess in 65 trials.\n\nSuccess in 78 trials.\n\nSuccess in 91 trials.\n\nSuccess in 104 trials.\n\nSuccess in 117 trials.\n\nSuccess in 130 trials.\n\nSuccess in 143 trials.\n\nSuccess in 156 trials.\n\nSuccess in 169 trials.\n\nSuccess in 182 trials.\n\nSuccess in 195 trials.\n\nSuccess in 208 trials.\n\nSuccess in 221 trials.\n\nSuccess in 234 trials.\n\nSuccess in 247 trials.\n\nSuccess in 260 trials.\n\nSuccess in 273 trials.\n\nSuccess in 286 trials.\n\nSuccess in 299 trials.\n\nSuccess in 312 trials.\n\nSuccess in 325 trials.\n\nSuccess in 338 trials.\n\nSuccess in 351 trials.\n\nSuccess in 364 trials.\n\nSuccess in 377 trials.\n\nSuccess in 390 trials.\n\nSuccess in 403 trials.\n\nSuccess in 416 trials.\n\nSuccess in 429 trials.\n\nSuccess in 442 trials.\n\nSuccess in 455 trials.\n\nSuccess in 468 trials.\n\nSuccess in 481 trials.\n\nSuccess in 494 trials.\n\nSuccess in 507 trials.\n\nSuccess in 520 trials.\n\nSuccess in 533 trials.\n\nSuccess in 546 trials.\n\nSuccess in 559 trials.\n\nSuccess in 572 trials.\n\nSuccess in 585 trials.\n\nSuccess in 598 trials.\n\nSuccess in 611 trials.\n\nSuccess in 624 trials.\n\nSuccess in 637 trials.\n\nSuccess in 650 trials.\n"))
((current-date 1330486831 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 31) (minute 40) (hour 22) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program sboyer) (platform "whalesong:Chrome 17/Linux") (time 411854) (output "51507739 rewrites\n51507739\n"))
((current-date 1330486882 "Tuesday, February 28th, 2012" (year 2012) (month 2) (day 28) (second 22) (minute 41) (hour 22) (week-day 2) (year-day 58) (dst? #f) (time-zone-offset -18000)) (host-name "thunderclap") (program scheme) (platform "whalesong:Chrome 17/Linux") (time 48893) (output "(\"eight\" \"eleven\" \"five\" \"four\" \"nine\" \"one\" \"seven\" \"six\" \"ten\" \"three\" \"twelve\" \"two\")\n"))
